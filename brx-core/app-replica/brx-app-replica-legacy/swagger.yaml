---
openapi: 3.0.1
info:
  title: API V4
  version: v4
paths:
  "/api/v3/equipment":
    get:
      summary: list equipment
      tags:
      - Equipment
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
    post:
      summary: create equipment
      tags:
      - Equipment
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                equipment:
                  type: object
                  required:
                  - name
                  - user_id
                  properties:
                    name:
                      type: string
                      description: Name of the equipment
                    user_id:
                      type: string
                      description: ID of the user the equipment is assigned to
  "/api/v3/equipment/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: update equipment
      tags:
      - Equipment
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                equipment:
                  type: object
                  required:
                  - name
                  - user_id
                  properties:
                    name:
                      type: string
                      description: Name of the equipment
                    user_id:
                      type: string
                      description: ID of the user the equipment is assigned to
    delete:
      summary: delete equipment
      tags:
      - Equipment
      security:
      - api_key: []
        bearer: []
      description: Deletes an Equipment
      responses:
        '200':
          description: successful
  "/api/v3/workout_blocks":
    get:
      summary: list workout_blocks
      tags:
      - Workout Blocks
      security:
      - api_key: []
        bearer: []
      parameters:
      - name: workout_id
        in: query
        required: true
        description: ID of Workout to which the workout block is assigned
        schema:
          type: integer
      responses:
        '200':
          description: successful
    post:
      summary: create workout_block
      tags:
      - Workout Blocks
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workout_block:
                  type: object
                  required:
                  - name
                  - block_type
                  - sort_order
                  - workout_id
                  properties:
                    name:
                      type: string
                      description: Name of the Workout Block
                    block_type:
                      type: string
                      description: "`normal` (just like any regular workout where
                        you complete all sets of each exercise before moving to the
                        next exercise.)<br>`superset` (call for completing one set
                        of each exercise in the superset before starting over from
                        the beginning)<br>`circuit` (similar to Superset blocks, but
                        they allow for a time per round requirement for each exercise
                        in a set)<br>`"
                    time:
                      type: integer
                      description: If a circuit, the time in seconds that the block
                        should be completed.
                    rounds:
                      type: integer
                      description: Sets of the Workout Blocks
                    sort_order:
                      type: integer
                      description: Sort order of the Workout Block in the workout
                    workout_id:
                      type: integer
                      description: ID assigned to the workout block
  "/api/v3/workout_blocks/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: update workout_block
      tags:
      - Workout Blocks
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workout_block:
                  type: object
                  required:
                  - name
                  - block_type
                  - sort_order
                  - workout_id
                  properties:
                    name:
                      type: string
                      description: Name of the Workout Block
                    block_type:
                      type: string
                      description: "`normal` (just like any regular workout where
                        you complete all sets of each exercise before moving to the
                        next exercise.)<br>`superset` (call for completing one set
                        of each exercise in the superset before starting over from
                        the beginning)<br>`circuit` (similar to Superset blocks, but
                        they allow for a time per round requirement for each exercise
                        in a set)<br>`"
                    time:
                      type: integer
                      description: If a circuit, the time in seconds that the block
                        should be completed.
                    rounds:
                      type: integer
                      description: Sets of the Workout Blocks
                    sort_order:
                      type: integer
                      description: Sort order of the Workout Block in the workout
                    workout_id:
                      type: integer
                      description: ID assigned to the workout block
    delete:
      summary: delete workout_block
      tags:
      - Workout Blocks
      security:
      - api_key: []
        bearer: []
      description: Delete a Workout Block
      responses:
        '200':
          description: successful
  "/api/v3/workout_exercise_sets":
    post:
      summary: create workout_exercise_set
      tags:
      - Workout Exercise Sets
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workout_exercise_set:
                  type: object
                  required:
                  - workout_exercise_id
                  properties:
                    reps:
                      type: integer
                      description: An Exercise rep
                    distance_measurement:
                      type: string
                      description: 'distance measurment that was logged. One of: `miles`,
                        `yards`, `feet`'
                    weight:
                      type: integer
                      description: weight in pounds
                    distance:
                      type: integer
                      description: Logged distance stored in imperial. Depends on
                        `distance_measurement`
                    time:
                      type: integer
                      description: time in seconds
                    workout_exercise_id:
                      type: integer
                      description: ID assigned to the Workout Exercise Set
                    pr:
                      type: boolean
                      description: personal record
                    sr:
                      type: boolean
                      description: sitewide record
  "/api/v3/workout_exercise_sets/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the Workout Exercise Set
      required: true
      schema:
        type: string
    put:
      summary: update workout_exercise_set
      tags:
      - Workout Exercise Sets
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workout_exercise_set:
                  type: object
                  required:
                  - workout_exercise_id
                  properties:
                    reps:
                      type: integer
                      description: An Exercise rep
                    distance_measurement:
                      type: string
                      description: 'distance measurment that was logged. One of: `miles`,
                        `yards`, `feet`'
                    weight:
                      type: integer
                      description: weight in pounds
                    distance:
                      type: integer
                      description: Logged distance stored in imperial. Depends on
                        `distance_measurement`
                    time:
                      type: integer
                      description: time in seconds
                    workout_exercise_id:
                      type: integer
                      description: ID assigned to the Workout Exercise Set
                    pr:
                      type: boolean
                      description: personal record
                    sr:
                      type: boolean
                      description: sitewide record
    delete:
      summary: delete workout_exercise_set
      tags:
      - Workout Exercise Sets
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
  "/api/v3/plan_blocks":
    post:
      summary: create plan_block
      tags:
      - Plan Blocks
      security:
      - api_key: []
        bearer: []
      description: Create a PlanBlock
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_block:
                  type: object
                  required:
                  - name
                  - block_type
                  - sort_order
                  - workout_id
                  properties:
                    name:
                      type: string
                      description: name of PlanWorkout
                    block_type:
                      type: string
                      description: "`normal` (just like any regular workout where
                        you complete all sets of each exercise before moving to the
                        next exercise.)<br>`superset` (call for completing one set
                        of each exercise in the superset before starting over from
                        the beginning)<br>`circuit` (similar to Superset blocks, but
                        they allow for a time per round requirement for each exercise
                        in a set)<br>`"
                    time:
                      type: integer
                      description: If a circuit, the time in seconds that the block
                        should be completed.
                    rounds:
                      type: integer
                      description: number of rounds the block should be complted
                    sort_order:
                      type: string
                      description: sort order of the block within the PlanWorkout
                    workout_id:
                      type: integer
                      description: PlanWorkout ID
                    notes:
                      type: string
                      description: PlanBlock notes
                    save_metric:
                      type: boolean
                      description: If the PlanBlock's exercises should be saved as
                        rep-maxes after logged
  "/api/v3/plan_blocks/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: update plan_block
      tags:
      - Plan Blocks
      security:
      - api_key: []
        bearer: []
      description: Update a PlanBlock
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_block:
                  type: object
                  required:
                  - name
                  - block_type
                  - sort_order
                  - workout_id
                  properties:
                    name:
                      type: string
                      description: name of PlanWorkout
                    block_type:
                      type: string
                      description: "`normal` (just like any regular workout where
                        you complete all sets of each exercise before moving to the
                        next exercise.)<br>`superset` (call for completing one set
                        of each exercise in the superset before starting over from
                        the beginning)<br>`circuit` (similar to Superset blocks, but
                        they allow for a time per round requirement for each exercise
                        in a set)<br>`"
                    time:
                      type: integer
                      description: If a circuit, the time in seconds that the block
                        should be completed.
                    rounds:
                      type: integer
                      description: ID of the WorkoutPlan
                    sort_order:
                      type: string
                      description: sort order of the block within the PlanWorkout
                    workout_id:
                      type: integer
                      description: PlanWorkout ID
                    notes:
                      type: string
                      description: PlanBlock notes
                    save_metric:
                      type: boolean
                      description: If the PlanBlock's exercises should be saved as
                        rep-maxes
    delete:
      summary: delete plan_block
      tags:
      - Plan Blocks
      security:
      - api_key: []
        bearer: []
      description: Delete a PlanBlock.
      responses:
        '200':
          description: successful
  "/api/v3/plan_exercises":
    post:
      summary: create plan_exercise
      tags:
      - Plan Exercises
      security:
      - api_key: []
        bearer: []
      description: Create a PlanExercise
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_exercise:
                  type: object
                  required:
                  - sets
                  - reps
                  - week
                  - sort_order
                  - exercise_id
                  - block_id
                  properties:
                    each_side:
                      type: boolean
                      description: Indicates if exercise should be done on "each side"
                        of the body. (e.g. left arm and right arm)
                    sets:
                      type: integer
                      description: number of sets
                    reps:
                      type: integer
                      description: An Exercise rep
                    distance_measurement:
                      type: string
                      description: 'distance measurment that was logged. One of: `miles`,
                        `yards`, `feet`'
                    weight:
                      type: integer
                      description: weight in pounds
                    distance:
                      type: integer
                      description: Logged distance stored in imperial. Depends on
                        `distance_measurement`
                    time:
                      type: integer
                      description: time in seconds
                    rest_interval:
                      type: integer
                      description: rest period in seconds
                    notes:
                      type: string
                      description: PlanExercise notes
                    tempo:
                      type: string
                      description: PlanExercise tempo (e.g. "1-1-2-2")
                    intensity:
                      type: string
                      description: PlanExercise intensity (e.g. "9/10")
                    sort_order:
                      type: integer
                      description: sort order of the PlanExercise within a PlanBlock
                    exercise_id:
                      type: integer
                      description: Exercise ID
                    workout_id:
                      type: integer
                      description: PlanWorkout ID
                    block_id:
                      type: integer
                      description: PlanBlock ID
                    save_metric:
                      type: boolean
                      description: If the exercise should be saved as a rep max after
                        logged.
                    rep_max_count:
                      type: integer
                      description: Number of reps for rep max. If the user does not
                        have a rep max for this count + rep_max_exercise_id, then
                        it will not be pulled from a rep max.
                    rep_max_exercise_id:
                      type: integer
                      description: Rep Max Exercise ID
                    rep_max_percentages:
                      type: array
                      items:
                        type: integer
                        description: Array of percentages. length should match the
                          number of reps for the exercise. Weight will be caluclated
                          as a percent of the exercise weight.
                    alternate_exercise_video_tag_id:
                      type: integer
                      description: Alternate Exercise Video Tag ID to use for this
                        exercise
                    alternate_exercises:
                      type: array
                      items:
                        properties:
                          label:
                            type: string
                            description: alternate exericse label (e.g. "Easy")
                          name:
                            type: string
                            description: alternate exericse name
                          id:
                            type: integer
                            description: Exercise ID
                          sets:
                            type: integer
                            description: number of sets
                          reps:
                            type: integer
                            description: An Exercise rep
                          distanceMeasurement:
                            type: string
                            description: 'distance measurment that was logged. One
                              of: `miles`, `yards`, `feet`'
                          weight:
                            type: integer
                            description: weight in pounds
                          distance:
                            type: integer
                            description: Logged distance stored in imperial. Depends
                              on `distance_measurement`
                          time:
                            type: integer
                            description: time in seconds
                          rest:
                            type: integer
                            description: rest period in seconds
                          each:
                            type: boolean
                            description: Indicates if exercise should be done on "each
                              side" of the body. (e.g. left arm and right arm)
                          useProgressions:
                            type: boolean
                            description: "`true` if alternate should use progressions"
                          fields:
                            type: array
                            items:
                              type: string
                              description: 'Exercise measurement(s) that are used
                                for this alternate exercise: `reps`, `weight`, `distance`,
                                `time`'
                          measurements:
                            type: array
                            items:
                              properties:
                                stat:
                                  type: string
                                  description: can be any artibrary measurement. If
                                    it matches the underscored ID for a FitnessStat
                                    on the platform, it will be stored as a FitnessStat
                                    for the user when logged.
                                label:
                                  type: string
                                  description: the label for the measurement
                                value:
                                  type: integer
                                  description: the value for the measurement
                          alternate_exercise_video_tag_id:
                            type: string
                            description: Alternate Exercise Video Tag ID to use for
                              this exercise
                          videoEmbedUrl:
                            type: string
                            description: The stream URL of the video for this alternate
                              exercise.  You can use this or look up the tag video
                              on the actual exercise model.
                          thumbnail:
                            type: string
                            description: The thumbnail URL of the video for this alternate
                              exercise.  You can use this or look up the tag thumbnail
                              on the actual exercise model.
  "/api/v3/plan_exercises/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: update plan_exercise
      tags:
      - Plan Exercises
      security:
      - api_key: []
        bearer: []
      description: Update a PlanExercise
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_exercise:
                  type: object
                  required:
                  - sets
                  - reps
                  - week
                  - sort_order
                  - exercise_id
                  - block_id
                  properties:
                    each_side:
                      type: boolean
                      description: Indicates if exercise should be done on "each side"
                        of the body. (e.g. left arm and right arm)
                    sets:
                      type: integer
                      description: number of sets
                    reps:
                      type: integer
                      description: An Exercise rep
                    distance_measurement:
                      type: string
                      description: 'distance measurment that was logged. One of: `miles`,
                        `yards`, `feet`'
                    weight:
                      type: integer
                      description: weight in pounds
                    distance:
                      type: integer
                      description: Logged distance stored in imperial. Depends on
                        `distance_measurement`
                    time:
                      type: integer
                      description: time in seconds
                    rest_interval:
                      type: integer
                      description: rest period in seconds
                    notes:
                      type: string
                      description: PlanExercise notes
                    tempo:
                      type: string
                      description: PlanExercise tempo (e.g. "1-1-2-2")
                    intensity:
                      type: string
                      description: PlanExercise intensity (e.g. "9/10")
                    sort_order:
                      type: integer
                      description: sort order of the PlanExercise within a PlanBlock
                    exercise_id:
                      type: integer
                      description: Exercise ID
                    workout_id:
                      type: integer
                      description: PlanWorkout ID
                    block_id:
                      type: integer
                      description: PlanBlock ID
                    save_metric:
                      type: boolean
                      description: If the exercise should be saved as a rep max after
                        logged.
                    rep_max_count:
                      type: integer
                      description: Number of reps for rep max. If the user does not
                        have a rep max for this count + rep_max_exercise_id, then
                        it will not be pulled from a rep max.
                    rep_max_exercise_id:
                      type: integer
                      description: Rep Max Exercise ID
                    rep_max_percentages:
                      type: array
                      items:
                        type: integer
                        description: Array of percentages. length should match the
                          number of reps for the exercise. Weight will be caluclated
                          as a percent of the exercise weight.
                    alternate_exercises:
                      type: array
                      items:
                        properties:
                          label:
                            type: string
                            description: alternate exericse label (e.g. "Easy")
                          name:
                            type: string
                            description: alternate exericse name
                          id:
                            type: integer
                            description: Exercise ID
                          sets:
                            type: integer
                            description: number of sets
                          reps:
                            type: integer
                            description: An Exercise rep
                          distanceMeasurement:
                            type: string
                            description: 'distance measurment that was logged. One
                              of: `miles`, `yards`, `feet`'
                          weight:
                            type: integer
                            description: weight in pounds
                          distance:
                            type: integer
                            description: Logged distance stored in imperial. Depends
                              on `distance_measurement`
                          time:
                            type: integer
                            description: time in seconds
                          rest:
                            type: integer
                            description: rest period in seconds
                          each:
                            type: boolean
                            description: Indicates if exercise should be done on "each
                              side" of the body. (e.g. left arm and right arm)
                          useProgressions:
                            type: boolean
                            description: "`true` if alternate should use progressions"
                          fields:
                            type: array
                            items:
                              type: string
                              description: 'Exercise measurement(s) that are used
                                for this alternate exercise: `reps`, `weight`, `distance`,
                                `time`'
                          measurements:
                            type: array
                            items:
                              properties:
                                stat:
                                  type: string
                                  description: can be any artibrary measurement. If
                                    it matches the underscored ID for a FitnessStat
                                    on the platform, it will be stored as a FitnessStat
                                    for the user when logged.
                                label:
                                  type: string
                                  description: the label for the measurement
                                value:
                                  type: integer
                                  description: the value for the measurement
    delete:
      summary: delete plan_exercise
      tags:
      - Plan Exercises
      security:
      - api_key: []
        bearer: []
      description: Delete a PlanExercise
      responses:
        '200':
          description: successful
  "/api/v4/calendar":
    parameters:
    - name: start
      in: query
      required: true
      description: start date as a unix timestamp
      schema:
        type: integer
    - name: end
      in: query
      required: true
      description: end date as a unix timestamp
      schema:
        type: integer
    - name: group_id
      in: query
      required: false
      description: Group ID to fetch that Group's calendar events
      schema:
        type: integer
    - name: user_ids
      in: query
      required: false
      description: comma separated list of User IDs to fetch those Users' calendar
        events
      schema:
        type: string
    - name: user_id
      in: query
      required: false
      description: User ID to fetch that user's calendar events
      schema:
        type: string
    - name: affinity
      in: query
      required: false
      description: 'Comma separated list of affinities. Either `affinity` OR `object_type`
        is required.<br>`webview`: returns `assessment` events, `habit` events, `checkin`
        events, and `required` events (e.g. waivers)<br>`summary`: returns `logged-workout`
        events<br>`logger`: returns `workout` events (scheduled/PlanWorkout events)<br>`schedule`:
        returns `appointment` and `schedule` events (availability schedules for trainers)'
      schema:
        type: string
    - name: object_type
      in: query
      required: false
      description: Comma separated list of object types. Either `affinity` OR `object_type`
        is required. See `affinity` for `object_type`'s that can be passed.
      schema:
        type: string
    - name: q[public]
      in: query
      required: false
      description: pass `true` if viewing a public booking page for the `schedule`
        affinity events.
      schema:
        type: boolean
    - name: q[trainer_booking]
      in: query
      required: false
      description: pass the User ID of the current user if the current user is a trainer
        booking events for the `schedule` affinity.
      schema:
        type: integer
    - name: q[service]
      in: query
      required: false
      description: Service ID for `schedule` affinity events. Filters events for only
        this service.
      schema:
        type: integer
    - name: q[trainer]
      in: query
      required: false
      description: User ID for `schedule` affinity events. Filters events for only
        this trainer.
      schema:
        type: integer
    - name: q[location]
      in: query
      required: false
      description: Location ID for `schedule` affinity events. Filters events for
        only this location.
      schema:
        type: integer
    - name: q[service_tag]
      in: query
      required: false
      description: Comma separated list of Service tags for `schedule` affinity events.
        Filters events by this service tag.
      schema:
        type: string
    - name: q[cancelled]
      in: query
      required: false
      description: "`true` to show cancelled events for the `schedule` affinity."
      schema:
        type: boolean
    - "$ref": "#/components/parameters/per"
    - "$ref": "#/components/parameters/page"
    - "$ref": "#/components/parameters/q"
    get:
      summary: list calendar events
      tags:
      - Calendar
      security:
      - api_key: []
        bearer: []
      description: get a list of events for a calendar
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    object_type:
                      type: string
                      description: 'one of: `assessment` (open in a webview), `habit`
                        (open in a webview), `checkin` (open in a webview), `workout`
                        (PlanWorkout), `logged-workout` (Workout), `required` (webview),
                        `schedule` (availability schedule), `schedule_service` (availability
                        schedule events), `appointment`, `scheduled_appointment` (instance
                        of a recurring appointment)'
                    object_id:
                      type: integer
                      description: ID of object based on `object_type`. Certain object_types
                        do not have object_id
                    affinity:
                      type: string
                      description: the affinity of the event
                    actions:
                      type: object
                      properties:
                        move:
                          type: object
                          description: if present, object can be moved within a calendar
                        delete:
                          type: object
                          description: if present, object can be deleted from calendar
                    owner_id:
                      type:
                      - array
                      - integer
                      description: User ID or comma separated IDs that owns the object.
                    image:
                      type: string
                      description: optional image URL for the event
                    completed:
                      type: boolean
                      description: whether or not the event has been completed/logged/etc.
                    date:
                      type: integer
                      description: Unix timestamp of the beginning of the day in UTC
                        for this event.
                    text:
                      type: string
                      description: title of the event.
                    data:
                      type: object
                      properties:
                        workout_plan_id:
                          type: integer
                          description: for `workout` object_type, ID of the WorkoutPlan
                        copied_from_plan_workout_id:
                          type: integer
                          description: for `workout` object_type, ID of the PlanWorkout
                            that this PlanWorkout was copied from.
                        entry_type:
                          type: string
                          description: for `workout` object_type, entry_type of the
                            PlanWorkout. Can be `no_block`, `block`, `text` or `text_with_exercises`
                        text:
                          type: string
                          description: for `workout` object_type, name of the PlanWorkout
                        updated_at:
                          type: integer
                          description: Unix timestamp of when the object was last
                            updated
                        calendar_date:
                          type: string
                          description: Date string for the event in the format YYYY/MM/DD
                        calendar_type:
                          type: string
                          description: The type of calendar this event is on. `user`
                            (personal calendar for `User``), `client` (`ClientAssociation`
                            calendar that trainer can manage), `group` (`Group` calendar),
                            `service` (`Service` calendar)
                        type_id:
                          type: integer
                          description: ID of the object specified in calendar_type
                        alternate_workouts:
                          type: array
                          items:
                            properties:
                              id:
                                type: integer
                                description: ID of the alternate PlanWorkout
                              label:
                                type: string
                                description: name/label for the alternate PlanWorkout
                              image_url:
                                type: string
                                description: image URL for the alternate PlanWorkout
  "/api/v4/calendar/add":
    parameters:
    - name: id
      in: query
      required: true
      description: PlanWorkout ID to add to a user's calendar
      schema:
        type: integer
    - name: date
      in: query
      required: true
      description: Date to add PlanWorkout to the calendar in the format `MM/DD/YYYY`
      schema:
        type: string
    - name: type
      in: query
      required: true
      description: Must be `logged-workout`
      schema:
        type: string
    post:
      summary: add a PlanWorkout to a calendar
      tags:
      - Calendar
      security:
      - api_key: []
        bearer: []
      description: add a PlanWorkout to the current user's calendar
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  "/api/v4/calendar/remove":
    parameters:
    - name: id
      in: query
      required: true
      description: PlanWorkout ID to remove from the current user's calendar
      schema:
        type: integer
    - name: type
      in: query
      required: true
      description: either `logged-workout` if the ID is a Workout or `workout` if
        the ID if a PlanWorkout
      schema:
        type: string
    delete:
      summary: delete scheduled workout
      tags:
      - Calendar
      security:
      - api_key: []
        bearer: []
      description: delete a PlanWorkout for the current user
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  "/api/v4/calendar/move":
    parameters:
    - name: date
      in: query
      required: true
      description: Date to move the workout or planWorkout to in the format `MM/DD/YYYY`
      schema:
        type: string
    - name: type
      in: query
      required: true
      description: either `logged-workout` if the ID is a Workout or `workout` if
        the ID if a PlanWorkout
      schema:
        type: string
    - name: id
      in: query
      required: true
      description: PlanWorkout ID if `type` is `workout`, or Workout ID if `type`
        is `logged-workout`
      schema:
        type: integer
    put:
      summary: move a scheduled workout
      tags:
      - Calendar
      security:
      - api_key: []
        bearer: []
      description: move a PlanWorkout or Workout to a specific date for the current
        user
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  "/api/v4/calendar/schedule":
    parameters:
    - name: date
      in: query
      required: true
      description: Date to schedule the new PlanWorkout to in the format `MM/DD/YYYY`
      schema:
        type: string
    - name: id
      in: query
      required: true
      description: ID of Workout to convert to a PlanWorkout
      schema:
        type: integer
    - name: type
      in: query
      required: true
      description: must be `logged-workout`
      schema:
        type: string
    post:
      summary: schdule a logged workout
      tags:
      - Calendar
      security:
      - api_key: []
        bearer: []
      description: Copy a logged Workout and schedule it to the current user's calendar
        as a PlanWorkout
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  "/api/v4/carts/purchased_items":
    parameters:
    - name: user_id
      in: query
      description: Current User Id
      schema:
        type: string
    get:
      summary: purchased_items cart
      tags:
      - Purchased Items
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                properties:
                  item_type:
                    type: string
                    description: Item of purchased item
                  item_id:
                    type: integer
                    description: Id of purchased item
                  payment_option:
                    type: object
                    description: Payment option object
                    properties:
                      type:
                        type: string
                        description: Type of payment option, can be a purchase or
                          a subscription
                      amount:
                        type: integer
                        description: Amount of the payment
                      name:
                        type: string
                        description: Name of the payment option
                      currency:
                        type: string
                        description: Currency of the payment
                      location:
                        type: string
                        description: Location of the payment
                      interval:
                        type: string
                        description: Interval of the payment, if subscription
                      interval_count:
                        type: integer
                        description: Interval count of the payment, if subscription
                      trial_period_days:
                        type: integer
                        description: Trial period days of the payment, if subscription
                      is_iap:
                        type: boolean
                        description: Is IAP of the payment, if subscription
  "/api/v4/conversations/available_recipients":
    get:
      summary: available_recipients conversation
      tags:
      - Conversations
      security:
      - api_key: []
        bearer: []
      description: List of all recipients you can send a conversation to
      responses:
        '200':
          description: successful
  "/api/v4/conversations/{id}/reply_to":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: reply_to conversation
      tags:
      - Conversations
      security:
      - api_key: []
        bearer: []
      description: Reply to a conversation
      responses:
        '200':
          description: successful
  "/api/v4/conversations/{id}/mark_read":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: mark_read conversation
      tags:
      - Conversations
      security:
      - api_key: []
        bearer: []
      description: Mark a conversation as read
      responses:
        '200':
          description: successful
  "/api/v4/conversations":
    get:
      summary: list conversations
      tags:
      - Conversations
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
    post:
      summary: create conversation
      tags:
      - Conversations
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
  "/api/v4/conversations/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show conversation
      tags:
      - Conversations
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
    put:
      summary: update conversation
      tags:
      - Conversations
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
    delete:
      summary: delete conversation
      tags:
      - Conversations
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
  "/api/v4/coupons/check":
    post:
      summary: check coupon
      tags:
      - Coupons
      security:
      - api_key: []
        bearer: []
      description: validates a coupon code
      parameters:
      - name: type
        in: query
        required: true
        description: one of purchase (if making a one-time purchase) or subscription
          (if starting a subscription)
        schema:
          type: string
      - name: purchaseable_id
        in: query
        required: true
        description: The ID of the item being purchased
        schema:
          type: integer
      - name: purchaseable_type
        in: query
        required: true
        description: the type of the item being purchased. can be one of Group, Workout
          Plan, Fbm::Package, Exercisecom::Product, ClientAssociation, TrainerAssociation
        schema:
          type: string
      - name: coupon
        in: query
        required: true
        description: the coupon code in question
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: coupon not found
  "/api/v4/exercises":
    get:
      summary: list exercises
      tags:
      - Exercises
      security:
      - bearer: []
      parameters:
      - name: include_all
        in: query
        description: Ignore pagination and return everything (not recommended)
        schema:
          type: boolean
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - "$ref": "#/components/parameters/with_ids"
      responses:
        '200':
          description: successful
  "/api/v4/exercises/{id}":
    parameters:
    - name: id
      in: path
      description: Exercise ID
      required: true
      schema:
        type: string
    get:
      summary: show exercise
      tags:
      - Exercises
      security:
      - bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  alternate_exercises:
                    type: array
                  archived_at:
                    type: integer
                  average_rep_time:
                    type: integer
                  cached_slug:
                    type: string
                  created_at:
                    type: integer
                  default_notes:
                    type: string
                  description:
                    type: string
                  difficulty_level:
                    type: string
                  difficulty_level_id:
                    type: integer
                  distance:
                    type: boolean
                    description: Does the exercise require distance measurement?
                  distance_measurement:
                    type: string
                    description: miles, feet, meters, etc.
                  each_side:
                    type: boolean
                  embed_youtube_url:
                    type: string
                  equipment:
                    type: array
                  featured_plans:
                    type: array
                  force_type:
                    type: string
                  links:
                    type: object
                  mechanics_type:
                    type: string
                  mechanics_type_id:
                    type: integer
                  met:
                    type: integer
                  metric_type:
                    type: string
                  muscle_group:
                    type: string
                    description: The primary muscle group
                  muscle_groups:
                    type: array
                    description: All targeted muscle groups
                  name:
                    type: string
                  other_names:
                    type: string
                  pace:
                    type: number
                  primary_muscle_group_id:
                    type: integer
                  public:
                    type: boolean
                  rank:
                    type: number
                  rating:
                    type: number
                  ratings_count:
                    type: integer
                  reps:
                    type: boolean
                  scoring_difficulty:
                    type: number
                  secondary_muscle_groups:
                    type: array
                  similar_exercises:
                    type: array
                  square_thumbnail:
                    type: string
                  steps:
                    type: array
                  steps_header_text:
                    type: string
                  stream_url:
                    type: array
                  sub_trainer_id:
                    type: integer
                  tags:
                    type: array
                  tempo:
                    type: number
                  thumbnail:
                    type: string
                  time:
                    type: boolean
                  tips:
                    type: array
                  trainer_id:
                    type: integer
                  type_ids:
                    type: array
                  types:
                    type: array
                  updated_at:
                    type: integer
                  variations:
                    type: array
                  video_embed_url:
                    type: string
                  video_html_url:
                    type: string
                  video_stream_url:
                    type: string
                  video_url:
                    type: integer
                  weight:
                    type: boolean
                  youtube_url:
                    type: string
    put:
      summary: update exercise
      tags:
      - Exercises
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise:
                  type: object
                  properties:
                    archived_at:
                      type: integer
                    default_notes:
                      type: string
                    difficulty_level_id:
                      type: string
                    trainer_id:
                      type: integer
                    name:
                      type: string
                    primary_muscle_group_id:
                      type: integer
                    tag_list:
                      type: string
                    video_url:
                      type: string
                    video_id:
                      type: integer
                    weight:
                      type: boolean
                    reps:
                      type: boolean
                    time:
                      type: boolean
                    distance:
                      type: boolean
                      description: Does the exercise require distance measurement?
                    approved:
                      type: boolean
                    steps:
                      type: array
                    tips:
                      type: array
                    variations:
                      type: array
                    thumbnail_id:
                      type: integer
                    force_type:
                      type: string
                    mechanics_type:
                      type: string
                    description:
                      type: string
                    similar_exercises:
                      type: array
                    featured_plans:
                      type: array
                    steps_header_text:
                      type: string
                    sub_trainer_id:
                      type: integer
                    stream_url:
                      type: array
                    distance_measurement:
                      type: string
                      description: miles, feet, meters, etc.
                    each_side:
                      type: boolean
                    tempo:
                      type: number
                    equipment_ids:
                      type: array
                    exercise_type_ids:
                      type: array
                    secondary_muscle_group_ids:
                      type: array
                    alternate_exercises:
                      type: array
                    assets:
                      object: array
  "/api/v4/exercises/":
    post:
      summary: create exercise
      tags:
      - Exercises
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise:
                  type: object
                  properties:
                    archived_at:
                      type: integer
                    default_notes:
                      type: string
                    difficulty_level_id:
                      type: string
                    trainer_id:
                      type: integer
                    name:
                      type: string
                    primary_muscle_group_id:
                      type: integer
                    tag_list:
                      type: string
                    video_url:
                      type: string
                    video_id:
                      type: integer
                    weight:
                      type: boolean
                    reps:
                      type: boolean
                    time:
                      type: boolean
                    distance:
                      type: boolean
                      description: Does the exercise require distance measurement?
                    approved:
                      type: boolean
                    steps:
                      type: array
                    tips:
                      type: array
                    variations:
                      type: array
                    thumbnail_id:
                      type: integer
                    force_type:
                      type: string
                    mechanics_type:
                      type: string
                    description:
                      type: string
                    similar_exercises:
                      type: array
                    featured_plans:
                      type: array
                    steps_header_text:
                      type: string
                    sub_trainer_id:
                      type: integer
                    stream_url:
                      type: array
                    distance_measurement:
                      type: string
                      description: miles, feet, meters, etc.
                    each_side:
                      type: boolean
                    tempo:
                      type: number
                    equipment_ids:
                      type: array
                    exercise_type_ids:
                      type: array
                    secondary_muscle_group_ids:
                      type: array
                    alternate_exercises:
                      type: array
                    assets:
                      object: array
  "/api/v4/favorites":
    get:
      summary: list favorites
      tags:
      - Favorites
      security:
      - api_key: []
        bearer: []
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: successful
  "/api/v4/fbm/appointments/{id}/check_eligibility":
    parameters:
    - name: id
      in: path
      description: Fbm::Appointment id
      required: true
      schema:
        type: string
    - name: magic_link
      in: query
      description: magic_link
      schema:
        type: string
    - name: user_id
      in: query
      description: User id of the user who is trying to book the appointment
      schema:
        type: string
    - name: email
      in: query
      description: Email of the user who is trying to book the appointment
      schema:
        type: string
    - name: reschedule_id
      in: query
      description: Id of Fbm::Visit record being rescheduled
      schema:
        type: string
    get:
      summary: check_eligibility appointment
      tags:
      - Appointments
      description: Checks if user can book a specific appointment.
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  eligible:
                    type: boolean
                    description: Can user book this appointment
                  reason:
                    type: string
                    description: code symbol for why the user can not book.\n- full\n-
                      closed\n- signed_up\n- limit_service_categories\n- max_calendar_limit\n-
                      max_package_calendar_limit\n- max_visits\n- limited_booking\n-
                      limited_booking_package\n- limited_booking_future\n- same_time\n-
                      insufficient_funds\n- overbooked\n- unavailable\n- new_accounts_only
                  data:
                    type: boolean
                    description: If error code max_calendar_limit, data is the service
                      names that are limited. If error code max_package_calendar_limit,
                      data is the user package name that is limited. If error code
                      limit_service_categories, data is array of service categories
                      limited for user (controlled by groups). If trainer_reason is
                      same_time, data is the visit id of the conflicting visit
                  count:
                    type: integer
                    description: if error code max_calendar_limit, count is the max
                      visits for the service for the interval acording to the platform
                      limit booking services. if error code max_package_calendar_limit,
                      count is the max visits for the package for the interval
                  interval:
                    type: boolean
                    description: interval of max visits per interval
                  trainer_reason:
                    type: string
                    description: if set, prefer trainer_reason over reason. code symbol
                      for why the user can not book (Set if user is trainer)
                  reason_message:
                    type: string
                    description: user readable message for why user can not book
                  visits_remaining:
                    type: integer
                    description: number of bookable visits remaining for appointment
                      (999 means unlimited)
  "/api/v4/fbm/appointments/{id}/packages":
    parameters:
    - name: id
      in: path
      description: Fbm::Appointment id
      required: true
      schema:
        type: string
    get:
      summary: packages appointment
      tags:
      - Appointments
      description: List packages that can be used for a specific appointment.\nIf
        HTTP_WEB_CLIENT == v3, returns package serialized with v4 serializer. if HTTP_WEB_CLIENT
        != v3, returns package record converted to json with stripe payment plansplans.
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/fbm_package"
                - "$ref": "#/components/schemas/fbm_package_raw"
  "/api/v4/fbm/appointments":
    get:
      summary: list appointments
      tags:
      - Appointments
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointment:
                    type: array
                    items:
                      "$ref": "#/components/schemas/fbm_appointment"
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
    post:
      summary: create appointment
      tags:
      - Appointments
      parameters:
      - "$ref": "#/components/parameters/fbm_appointment"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_appointment"
  "/api/v4/fbm/appointments/{id}":
    parameters:
    - name: id
      in: path
      description: Fbm::Appointment id
      required: true
      schema:
        type: string
    get:
      summary: show appointment
      tags:
      - Appointments
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_appointment"
    put:
      summary: update appointment
      tags:
      - Appointments
      parameters:
      - "$ref": "#/components/parameters/fbm_appointment"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_appointment"
    delete:
      summary: delete appointment
      tags:
      - Appointments
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_appointment"
  "/api/v4/fbm/locations":
    get:
      summary: list locations
      tags:
      - Locations
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: array
                    items:
                      "$ref": "#/components/schemas/fbm_location"
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
    post:
      summary: create location
      tags:
      - Locations
      parameters:
      - "$ref": "#/components/parameters/fbm_location"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_location"
  "/api/v4/fbm/locations/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show location
      tags:
      - Locations
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_location"
    put:
      summary: update location
      tags:
      - Locations
      parameters:
      - "$ref": "#/components/parameters/fbm_location"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_location"
    delete:
      summary: delete location
      tags:
      - Locations
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_location"
  "/api/v4/fbm/scheduled_appointment_members":
    get:
      summary: list scheduled_appointment_members
      tags:
      - Scheduled Appointment Members
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - name: for_user
        in: query
        description: Filter by user
        schema:
          type: boolean
      - name: scheduled_appointment_id
        in: query
        description: all members of a scheduled appointment
        schema:
          type: integer
      - name: appointment_id
        in: query
        description: Requires scheduled_appointment_id. Filter out users with deleted
          visits for appointment with id appointment_id
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  scheduled_appointment_member:
                    type: array
                    items:
                      "$ref": "#/components/schemas/fbm_scheduled_appointment_member"
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
    post:
      summary: create scheduled_appointment_member
      tags:
      - Scheduled Appointment Members
      parameters:
      - "$ref": "#/components/parameters/fbm_scheduled_appointment_member"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_scheduled_appointment_member"
  "/api/v4/fbm/scheduled_appointment_members/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show scheduled_appointment_member
      tags:
      - Scheduled Appointment Members
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_scheduled_appointment_member"
    put:
      summary: update scheduled_appointment_member
      tags:
      - Scheduled Appointment Members
      parameters:
      - "$ref": "#/components/parameters/fbm_scheduled_appointment_member"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_scheduled_appointment_member"
    delete:
      summary: delete scheduled_appointment_member
      tags:
      - Scheduled Appointment Members
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_scheduled_appointment_member"
  "/api/v4/fbm/scheduled_appointments/{id}/check_eligibility":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: check_eligibility scheduled_appointment
      tags:
      - Sheduled Appointments
      responses:
        '200':
          description: successful
  "/api/v4/fbm/scheduled_appointments":
    get:
      summary: list scheduled_appointments
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      tags:
      - Sheduled Appointments
      responses:
        '200':
          description: successful
    post:
      summary: create scheduled_appointment
      tags:
      - Sheduled Appointments
      parameters:
      - "$ref": "#/components/parameters/fbm_scheduled_appointment"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_scheduled_appointment"
  "/api/v4/fbm/scheduled_appointments/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show scheduled_appointment
      tags:
      - Sheduled Appointments
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_scheduled_appointment"
    put:
      summary: update scheduled_appointment
      tags:
      - Sheduled Appointments
      parameters:
      - "$ref": "#/components/parameters/fbm_scheduled_appointment"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_scheduled_appointment"
    delete:
      summary: delete scheduled_appointment
      tags:
      - Sheduled Appointments
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_scheduled_appointment"
  "/api/v4/fbm/schedules":
    get:
      summary: list schedules
      tags:
      - Schedules
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    schedule:
                      type: array
                      items:
                        "$ref": "#/components/schemas/fbm_schedule"
                    meta:
                      type: object
                      properties:
                        total:
                          type: integer
                - "$ref": "#/components/schemas/fbm_schedule"
    post:
      summary: create schedule
      tags:
      - Schedules
      parameters:
      - "$ref": "#/components/parameters/fbm_schedule"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_schedule"
  "/api/v4/fbm/schedules/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show schedule
      tags:
      - Schedules
      parameters:
      - "$ref": "#/components/parameters/fbm_schedule"
      responses:
        '200':
          description: successful
    put:
      summary: update schedule
      tags:
      - Schedules
      parameters:
      - "$ref": "#/components/parameters/fbm_schedule"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_schedule"
    delete:
      summary: delete schedule
      tags:
      - Schedules
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_schedule"
  "/api/v4/fbm/services":
    get:
      summary: list services
      tags:
      - Services
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    service:
                      type: array
                      items:
                        "$ref": "#/components/schemas/fbm_service"
                    meta:
                      type: object
                      properties:
                        total:
                          type: integer
                - "$ref": "#/components/schemas/fbm_service"
    post:
      summary: create service
      tags:
      - Services
      parameters:
      - "$ref": "#/components/parameters/fbm_service"
      responses:
        '200':
          description: successful
  "/api/v4/fbm/services/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show service
      tags:
      - Services
      responses:
        '200':
          description: successful
    put:
      summary: update service
      tags:
      - Services
      parameters:
      - "$ref": "#/components/parameters/fbm_service"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_service"
    delete:
      summary: delete service
      tags:
      - Services
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_service"
  "/api/v4/fbm/visits":
    get:
      summary: list visits
      tags:
      - Visits
      description: 'list visits.<br>Note: the value of HTTP_WEB_CLIENT determines
        if v4 or v5 serializer is used. v5 is useded when HTTP_WEB_CLIENT is set to
        either "v3" or "react"'
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - name: for_user
        in: query
        description: retrieve the visits accessable for the user
        schema:
          type: boolean
      - name: with_ids
        in: query
        description: retrieve the visits accessable for the user
        schema:
          type: boolean
      - name: appointment_id
        in: query
        description: only show visits for this appointment
        schema:
          type: string
      - name: active_visits
        in: query
        description: only retreive finished visits for appointments and check-ins
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    visit:
                      type: array
                      items:
                        "$ref": "#/components/schemas/v4_fbm_visit"
                    meta:
                      type: object
                      properties:
                        total:
                          type: integer
                - "$ref": "#/components/schemas/v4_fbm_visit"
                - type: object
                  properties:
                    visit:
                      type: array
                      items:
                        "$ref": "#/components/schemas/v5_fbm_visit"
                    meta:
                      type: object
                      properties:
                        total:
                          type: integer
                - "$ref": "#/components/schemas/v5_fbm_visit"
    post:
      summary: create visit
      tags:
      - Visits
      parameters:
      - "$ref": "#/components/parameters/fbm_visit"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/v4_fbm_visit"
                - "$ref": "#/components/schemas/v5_fbm_visit"
  "/api/v4/fbm/visits/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show visit
      tags:
      - Visits
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/v4_fbm_visit"
                - "$ref": "#/components/schemas/v5_fbm_visit"
    put:
      summary: update visit
      tags:
      - Visits
      parameters:
      - "$ref": "#/components/parameters/fbm_visit"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/v4_fbm_visit"
                - "$ref": "#/components/schemas/v5_fbm_visit"
    delete:
      summary: delete visit
      tags:
      - Visits
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/v4_fbm_visit"
                - "$ref": "#/components/schemas/v5_fbm_visit"
  "/api/v4/fbm/waitlist_entries":
    get:
      summary: list waitlist_entries
      tags:
      - Waitlist Entries
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - name: for_user
        in: query
        description: get entries for user where the appointment is in the future and
          the appointment is not cancelled and the appointment is not expired. results
          sorted by appointment start time
        schema:
          type: boolean
      - name: appointment_id
        in: query
        description: retrieve entries for a specific appointment. (NOT COMPATABLE
          WITH for_user)
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    waitlist_entry:
                      type: array
                      items:
                        "$ref": "#/components/schemas/fbm_waitlist_entry"
                    meta:
                      type: object
                      properties:
                        total:
                          type: integer
                - "$ref": "#/components/schemas/fbm_waitlist_entry"
    post:
      summary: create waitlist_entry
      tags:
      - Waitlist Entries
      parameters:
      - "$ref": "#/components/parameters/fbm_waitlist_entry"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_waitlist_entry"
  "/api/v4/fbm/waitlist_entries/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show waitlist_entry
      tags:
      - Waitlist Entries
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_waitlist_entry"
    put:
      summary: update waitlist_entry
      tags:
      - Waitlist Entries
      parameters:
      - "$ref": "#/components/parameters/fbm_waitlist_entry"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_waitlist_entry"
    delete:
      summary: delete waitlist_entry
      tags:
      - Waitlist Entries
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/fbm_waitlist_entry"
  "/api/v4/group_resources":
    get:
      summary: list group_resources
      tags:
      - Group Resources
      security:
      - api_key: []
        bearer: []
      parameters:
      - name: for_user
        in: query
        description: Fetch Resource Asset current user has access to
        schema:
          type: boolean
      - name: group_id
        in: query
        description: Fetch Resource Asset with given group id
        schema:
          type: integer
      - name: id
        in: query
        description: Fetch Resource Asset with given id
        schema:
          type: integer
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - "$ref": "#/components/parameters/with_ids"
      responses:
        '200':
          description: successful
    post:
      summary: create group_resource
      tags:
      - Group Resources
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group_resource:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Name of the Group Resource
                    delay_interval:
                      type: boolean
                    resource_id:
                      type: integer
                      description: ID for the resource on the Group Resource
                    tag_list:
                      type: array
                      description: List of all the tags assigned to the Group Resource
                    expires_at:
                      type: integer
                      description: Date of when the Group Resource expires
                    thumbnail_id:
                      type: integer
  "/api/v4/group_resources/{id}":
    parameters:
    - name: id
      in: query
      description: Group Resource ID
      schema:
        type: path
    get:
      summary: show group_resource
      tags:
      - Group Resources
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
  "/api/v4/groups/{id}/add_member":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: user_ids
      in: query
      description: array of user ids
      schema:
        type: array
    - name: with_onboarding
      in: query
      description: true to send emails and assign plans as if the user had purchased
        the group
      schema:
        type: boolean
    post:
      summary: add_member group
      tags:
      - Groups
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
  "/api/v4/groups/calendars":
    get:
      summary: calendars group
      tags:
      - Groups
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: successful
  "/api/v4/groups":
    get:
      summary: list groups
      tags:
      - Groups
      security:
      - api_key: []
        bearer: []
      description: 'Group Types 1: Free Group, 2: Paid Group'
      parameters:
      - name: public
        in: query
        required: false
        description: 'show groups user has permission to see and are not private.
          Cannot be used in conjunction with: for_user, member_only, for_user_id,
          ids, with_ids, admin_user'
        schema:
          type: bool
      - name: for_user
        in: query
        required: false
        description: 'show groups user has permission to see and are not private and
          have group type 1 (free group). Cannot be used in conjunction with: public,
          for_user_id, ids, with_ids, admin_user'
        schema:
          type: bool
      - name: member_only
        in: query
        required: false
        description: show groups user is a member of. Can only be included with for_user
          or for_user_id
        schema:
          type: bool
      - name: for_user_id
        in: query
        required: false
        description: 'same as for_user but for a specific user. Cannot be used in
          conjunction with: public, for_user, ids, with_ids, admin_user'
        schema:
          type: bool
      - name: ids
        in: query
        required: false
        description: 'show groups with ids. Cannot be used in conjunction with: public,
          for_user, for_user_id, with_ids, admin_user'
        schema:
          type: bool
      - name: with_ids
        in: query
        required: false
        description: 'Fetch only the records that match the ids specified (comma delimited
          list).  Pagination is ignored if with_ids is specified. Cannot be used in
          conjunction with: public, for_user, for_user_id, ids, admin_user'
        schema:
          type: bool
      - name: admin_user
        in: query
        required: false
        description: 'return groups where admin_user is an admin. cannot be used in
          conjunction with: public, for_user, for_user_id, ids, with_ids'
        schema:
          type: bool
      - name: pluck_columns
        in: query
        required: false
        description: 'Returns only the specified properties in a comma separated list.  If
          not specified, all properties will be returned. Cannot be used in conjunction
          with: admin_user, for_user, for_user_id, ids, with_ids'
        schema:
          type: bool
      - name: per
        in: query
        required: false
        description: 'The number of records to return per page.  If set, the response
          will return a meta field with the total number of records. Cannot be used
          in conjunction with: admin_user, for_user, for_user_id, ids, with_ids'
        schema:
          type: integer
      - name: page
        in: query
        required: false
        description: 'The current page to return.  If set, the response will return
          a meta field with the total number of records. Cannot be used in conjunction
          with: admin_user, for_user, for_user_id, ids, with_ids'
        schema:
          type: integer
      - name: q
        in: query
        required: false
        description: 'Filters the response. See Ransack link for specific documentation:
          https://github.com/activerecord-hackery/ransack. Cannot be used in conjunction
          with: admin_user, for_user, for_user_id, ids, with_ids'
        schema:
          type: string
      responses:
        '200':
          description: successful
    post:
      summary: create group
      tags:
      - Groups
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
  "/api/v4/groups/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show group
      tags:
      - Groups
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
    put:
      summary: update group
      tags:
      - Groups
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
    delete:
      summary: delete group
      tags:
      - Groups
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
  "/api/v4/resources":
    get:
      summary: list resources
      tags:
      - Resources
      security:
      - api_key: []
        bearer: []
      parameters:
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - "$ref": "#/components/parameters/with_ids"
      responses:
        '200':
          description: successful
    post:
      summary: create resource
      tags:
      - Resources
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resource:
                  type: object
                  properties:
                    name:
                      type: string
                      description: name of Resource
                    auto_assign:
                      type: boolean
                      description: Boolean value to check auto assignment of asset
                    auto_assign_message:
                      type: boolean
                      description: Boolean value to check auto assignment of message
                        on asset
                    resource_url:
                      type: string
                      description: Url for Resource
                    sub_trainer_id:
                      type: integer
                      description: Sub Trainer Id assigned to the resource
  "/api/v4/resources/{id}":
    parameters:
    - name: id
      in: path
      description: Resource ID
      required: true
      schema:
        type: string
    get:
      summary: show resource
      tags:
      - Resources
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
  "/api/v4/users/sign_in":
    post:
      summary: Sign in
      tags:
      - Authentication
      security:
      - bearer: []
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  auth_token:
                    type: string
                    description: Authentication token used on subsequent API requests
                      to authenticate the user
                  email:
                    type: string
                  nickname:
                    type: string
                  id:
                    type: integer
                  api_base_url:
                    type: string
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v4/sign_out":
    delete:
      summary: Sign out
      tags:
      - Authentication
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  "/api/v4/users/password":
    post:
      summary: Reset Password
      tags:
      - Authentication
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: integer
                    description: 0 is failure to find the user, 1 is succesfully sent
                      reset instructions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - email
  "/api/v4/tags":
    post:
      summary: create tag
      parameters:
      - name: name
        in: query
        description: name
        schema:
          type: string
      - name: tag_type
        in: query
        description: what is being tagged i.e. client, workout-plan, exercise, etc.
        schema:
          type: string
      - name: description
        in: query
        description: tag description
        schema:
          type: string
      - name: collection_image_id
        in: query
        description: id of the image record
        schema:
          type: string
      - name: sort_order
        in: query
        description: the order the tag shows for the user/trainer
        schema:
          type: integer
      tags:
      - Tags
      security:
      - api_key: []
      description: create tag
      responses:
        '200':
          description: successful
    get:
      summary: list tags
      tags:
      - Tags
      security:
      - api_key: []
      description: list tag
      parameters:
      - name: type
        in: query
        description: what is being tagged i.e. client, workout-plan, exercise, etc.
        schema:
          type: string
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - "$ref": "#/components/parameters/with_ids"
      responses:
        '200':
          description: successful
  "/api/v4/tags/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: update tag
      tags:
      - Tags
      security:
      - api_key: []
      description: update tag
      parameters:
      - name: name
        in: query
        description: name
        schema:
          type: string
      - name: tag_type
        in: query
        description: what is being tagged i.e. client, workout-plan, exercise, etc.
        schema:
          type: string
      - name: description
        in: query
        description: tag description
        schema:
          type: string
      - name: collection_image_id
        in: query
        description: id of the image record
        schema:
          type: string
      - name: sort_order
        in: query
        description: the order the tag shows for the user/trainer
        schema:
          type: integer
      responses:
        '200':
          description: successful
    get:
      summary: show tag
      tags:
      - Tags
      security:
      - api_key: []
      description: get tag
      responses:
        '200':
          description: successful
    delete:
      summary: delete tag
      tags:
      - Tags
      security:
      - api_key: []
      description: delete tag
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
  "/api/v4/tags/update_tag":
    post:
      summary: update tag
      tags:
      - Tags
      security:
      - api_key: []
      description: update all instances of this tag
      parameters:
      - name: name
        in: query
        description: new name for tag
        schema:
          type: string
      - name: original_name
        in: query
        description: original name of the tag
        schema:
          type: string
      - name: image
        in: query
        description: image url for tag
        schema:
          type: string
      - name: taggable_type
        in: query
        description: what is being tagged i.e. client, workout-plan, exercise, etc.
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/v4/tags/delete_tag":
    post:
      summary: delete tag
      tags:
      - Tags
      security:
      - api_key: []
      description: delete all instances of this tag
      parameters:
      - name: name
        in: query
        description: name
        schema:
          type: string
      - name: taggable_type
        in: query
        description: what is being tagged i.e. client, workout-plan, exercise, etc.
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/v4/user_plans":
    get:
      summary: list user_plans
      tags:
      - User Plans
      description: Returns a list of user plans
      security:
      - api_key: []
        bearer: []
      parameters:
      - name: user_id
        in: query
        required: true
        description: return plans for the user - used in conjunction with recent/current.
          If blank, defaults to current user
        schema:
          type: integer
      - name: recent
        in: query
        required: false
        description: return 5 most recently started plans
        schema:
          type: boolean
      - name: current
        in: query
        required: false
        description: return all currently started user plans
        schema:
          type: boolean
      - name: include_stopped_paused
        in: query
        required: false
        description: for each workout_plan return latest user plans that are active,paused,
          or stopped
        schema:
          type: boolean
      - name: include_paused
        in: query
        required: false
        description: for each workout_plan return latest user plans that are active
          or paused
        schema:
          type: boolean
      - name: no_required_plans
        in: query
        required: false
        description: prevent user plans required by system from being returned. (any
          value will be treated as true)
        schema:
          type: boolean
      - name: calendars
        in: query
        required: false
        description: include user plans for workout plans that are calendar plans,
          excluded by default
        schema:
          type: boolean
      responses:
        '200':
          description: successful
    post:
      summary: create user_plan
      tags:
      - User Plans
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_plan:
                  type: object
                  properties:
                    keep_plan_ids:
                      type: array
                      nullable: true
                      description: IDs of the workout plans you wish to continue to
                        follow after starting this plan
                      items:
                        type: integer
                    started_at:
                      type: string
                      description: start date in the format YYYY-MM-DD
                    user_id:
                      type: integer
                      description: User ID of the user starting the plan
                    workout_days:
                      type: array
                      items:
                        type: string
                      description: Days of the week to workout on. lowercase week
                        day names
                    workout_plan_id:
                      type: integer
                      description: ID of the workout plan to start
                    initial_workout_plan_id:
                      type: integer
                      description: The starting workout of the workout plan being
                        started
                    no_follow_email:
                      type: boolean
                      description: Whether or not to send the user an email after
                        starting the plan
                    workout_reminders:
                      type: boolean
                      description: Whether or not to send the user workout reminders
                        every day they have a workout
                    include_empty:
                      type: boolean
                      description: Schedule blank days or skip them
                    resumed_from_user_plan_id:
                      type: integer
                      nullable: true
                      description: ID of the paused user plan that is being resumed
                        from
                    finished:
                      type: boolean
                      description: Whether or not the user has finished the plan
                    marketing_opt_in:
                      type: boolean
                      description: Whether or not the user has opted in to marketing
                        emails
                    other_plan_statuses:
                      type: array
                      nullable: true
                      description: 'Array of user plan statuses, allows you to remove
                        other plans in the same request that creates the plan (optional).
                        options: "keep" or "stop"'
                      items:
                        type: object
                        properties:
                          userPlanId:
                            type: integer
                          status:
                            type: string
  "/api/v4/user_plans/{id}":
    parameters:
    - name: id
      in: path
      description: User Plan ID
      required: true
      schema:
        type: string
    get:
      summary: show user_plan
      parameters:
      - name: calendars
        in: query
        required: false
        description: include user plans for wrokout plans that are calendar plans,
          excluded by default
        schema:
          type: boolean
      tags:
      - User Plans
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
    put:
      summary: update user_plan
      security:
      - api_key: []
        bearer: []
      parameters: []
      tags:
      - User Plans
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_plan:
                  type: object
                  properties:
                    keep_plan_ids:
                      type: array
                      description: IDs of the workout plans you wish to continue to
                        follow after starting this plan
                      items:
                        type: integer
                    started_at:
                      type: string
                      description: start date in the format YYYY-MM-DD
                    user_id:
                      type: integer
                      description: User ID of the user starting the plan
                    workout_days:
                      type: array
                      items:
                        type: string
                      description: Days of the week to workout on. lowercase week
                        day names
                    workout_plan_id:
                      type: integer
                      description: ID of the workout plan to start
                    initial_workout_plan_id:
                      type: integer
                      description: The starting workout of the workout plan being
                        started
                    no_follow_email:
                      type: boolean
                      description: Whether or not to send the user an email after
                        starting the plan
                    workout_reminders:
                      type: boolean
                      description: Whether or not to send the user workout reminders
                        every day they have a workout
                    include_empty:
                      type: boolean
                      description: Schedule blank days or skip them
                    resumed_from_user_plan_id:
                      type: integer
                      description: ID of the paused user plan that is being resumed
                        from
                    finished:
                      type: boolean
                      description: Whether or not the user has finished the plan
    delete:
      summary: delete user_plan
      tags:
      - User Plans
      description: Unfollows a workout plan
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
  "/api/v4/user_plans/{id}/pause":
    parameters:
    - name: id
      in: path
      description: User Plan ID
      required: true
      schema:
        type: string
    post:
      summary: pasue a user plan
      tags:
      - User Plans
      security:
      - api_key: []
        bearer: []
      description: stops a user plan and stores next workout and paused at time in
        paused_data field on the user plan
      responses:
        '200':
          description: successful
  "/api/v4/user_plans/{id}/next_workout":
    parameters:
    - name: id
      in: path
      description: User Plan ID
      required: true
      schema:
        type: string
    get:
      summary: get next workout for resume
      tags:
      - User Plans
      security:
      - api_key: []
        bearer: []
      description: get the stored resume on workout from the user plan
      responses:
        '200':
          description: successful
  "/api/v4/users":
    get:
      summary: list users
      tags:
      - Users
      security:
      - api_key: []
        bearer: []
      parameters:
      - name: id
        in: query
        description: ID for each client
        schema:
          type: integer
      - name: per
        in: query
        description: Number of results per page
        schema:
          type: integer
      - name: page
        in: query
        description: Current page to fetch
        schema:
          type: integer
      - name: started_at
        in: query
        description: Unix timestamp of user sign up date
        schema:
          type: integer
      - name: ended_at
        in: query
        description: Unix timestamp of user removal date
        schema:
          type: integer
      - name: user_id
        in: query
        description: ID for each user
        schema:
          type: integer
      - name: trainer_id
        in: query
        description: ID of the head trainer assigned to the user
        schema:
          type: integer
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - "$ref": "#/components/parameters/with_ids"
      responses:
        '200':
          description: successful
    post:
      summary: create user
      tags:
      - Users
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dependent:
                  type: boolean
                  description: is this user a dependent
                no_password:
                  type: boolean
                  description: If created dependent, does the dependent have a login
                sign_in:
                  type: boolean
                  description: if no user currently logged in, sign in as the newly
                    created user
                user:
                  type: object
                  properties:
                    nickname:
                      type: string
                      description: user nickname, auto generated if not provided
                    first_name:
                      type: string
                    last_name:
                      type: string
                    name:
                      type: string
                      description: can pass instead of first and last name. name will
                        be split on spaces and saved as first_name and last_name
                    email:
                      type: string
                      description: must be unique
                    password:
                      type: string
                    uses_metric:
                      type: boolean
                      description: use metric for mesurments
                    privacy_level:
                      type: integer
                      description: 0 - private profile, 1 - public profile
                    birthdate:
                      type: string
                      description: if dependent with no password, this field is required
                    zip_code:
                      type: string
                    phone_number:
                      type: string
                    location_id:
                      type: integer
                      description: location the user is associated with
                    receive_newsletter:
                      type: boolean
                      description: opt in to marketing emails
                    street_address:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    height:
                      type: integer
                    weight:
                      type: integer
                    use_dark_mode:
                      type: boolean
                      description: use darkmode on apps
                    affiliate_code:
                      type: string
                      description: used to track promotional campaigns
                    profile_fields:
                      type: array
                      description: platform defined custom user fields
                      items:
                        type: object
                        properties:
                          label:
                            type: string
                          value:
                            type: string
                    sub_trainers:
                      type: array
                      description: the user ids of any sub trainers the user is assigned
                      items:
                        type: integer
                  required:
                  - email
                  - first_name
                  - last_name
                  - password
              required:
              - user
  "/api/v4/users/{id}/workout_exercises":
    parameters:
    - name: id
      in: path
      description: User ID
      required: true
      schema:
        type: integer
    - name: exercise_id
      in: query
      description: Exercise ID you want to view history for
      schema:
        type: integer
    - name: with_date
      in: query
      description: true to include the timestamp of the workout in the response
      schema:
        type: boolean
    - name: pluck_columns
      in: query
      description: comma delimited list of columns to pluck for the response
      schema:
        type: string
    - name: q[s]
      in: query
      description: set to `workout_workout_date desc` to sort descending instead of
        ascending
      schema:
        type: string
    - "$ref": "#/components/parameters/per"
    - "$ref": "#/components/parameters/page"
    get:
      summary: show user's workout exercises
      tags:
      - Users
      description: Returns a paginated history of workout exercises for a user.  In
        some cases, you will want to use `pluck_columns` vs including all set data.
        Workout dates are stored on workouts, not the workout exercise object, so
        use `with_date` to return the date with the response
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: User ID
  "/api/v4/users/{id}":
    parameters:
    - name: id
      in: path
      description: User ID
      required: true
      schema:
        type: integer
    get:
      summary: show user
      tags:
      - Users
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: User ID
                  about_me:
                    type: string
                    description: User custom information
                  android_download_link:
                    type: string
                    description: Download link - android
                  alternate_landing:
                    type: boolean
                    description: Alternate landing page toggle
                  brand:
                    type: string
                    description: Platform brand user belongs to
                  cached_slug:
                    type: string
                  current_frc_score:
                    type: integer
                  created_at:
                    type: integer
                    description: Timestamp for when User was created
                  classpass_connected:
                    type: boolean
                  client_app_image:
                    type: string
                    description: Client App Image Link
                  custom_signup:
                    type: boolean
                  contact_url:
                    type: string
                  disabled_tabs:
                    type: boolean
                  disable_rescheduling:
                    type: boolean
                    description: Is the user allowed to reschedule
                  dashboard_appointments_location:
                    type: string
                    description: Location for appointments from client dashboard
                  default_health_metrics:
                    type: array
                    description: Trainer platform default health metrics
                  default_measurements:
                    type: array
                    description: Trainer platform default measurements
                  dropdown_text_color:
                    type: string
                  enable_fbm:
                    type: boolean
                    description: FBM payment method is enabled for client?
                  first_name:
                    type: string
                    description: Client First Name
                  favorite_exercises:
                    type: array
                    description: Array of clients favorite exercises
                  favorite_workouts:
                    type: array
                    description: Array of clients favorite workouts
                  health_info_metrics:
                    type: array
                    description: Client health information statistics
                  hidden_measurements:
                    type: array
                  highlight_color:
                    type: string
                  hide_calendars:
                    type: boolean
                    description: Has trainer hidden clients calendar?
                  ios_download_link:
                    type: string
                    description: Download link- ios
                  last_name:
                    type: string
                    description: Client Last Name
                  level:
                    type: string
                  links:
                    type: object
                  link_color:
                    type: string
                  level_completion:
                    type: integer
                  main_nav_bg_color:
                    type: string
                  main_nav_text_color:
                    type: string
                  main_nav_highlight_color:
                    type: string
                  measurements_order:
                    type: array
                  measurement_colors:
                    type: array
                  nickname:
                    type: string
                    description: Client nickname
                  num_workouts:
                    type: integer
                    description: Number of workouts assigned to client
                  num_badges:
                    type: integer
                    description: Number of badges assigned to client
                  phone_number:
                    type: integer
                    description: Client Phone Number
                  platform_id:
                    type: integer
                    description: ID for the platform the client belongs to
                  points:
                    type: integer
                  profile_image:
                    type: string
                    description: Client Profile image link
                  primary_button_text_color:
                    type: string
                  primary_button_color:
                    type: string
                  points_until_next_level:
                    type: integer
                  rank:
                    type: integer
                  required_sequence:
                    type: boolean
                  required_assessment:
                    type: boolean
                  show_activity:
                    type: boolean
                  sub_nav_bg_color:
                    type: string
                  sub_nav_text_color:
                    type: string
                  tags:
                    type: array
                    description: Array of all/any tags assigned to the client
                  time_zone:
                    type: integer
                    description: Clients Timezone
                  total_calories:
                    type: integer
                  trainer_bio:
                    type: string
                  trainer_id:
                    type: integer
                    description: ID of the clients head trainer
                  trainer_association_id:
                    type: integer
                    description: Client ID on the head trainers client list
                  trainer_default_image:
                    type: string
                  trainer_exercise_image:
                    type: string
                  trainer_messaging_disabled:
                    type: boolean
                  trainer_profile_fields:
                    type: array
                  training_info_fields:
                    type: array
                  use_exercise_image:
                    type: string
                  use_nav_text_color_on_mobile:
                    type: string
                  website:
                    type: string
                    description: Website link if the client has a personal website
                  workout_plan_id:
                    type: integer
                    description: Workout Plan ID to which the client belongs to
    delete:
      summary: delete user
      tags:
      - Users
      security:
      - api_key: []
        bearer: []
      description: Delete a User
      responses:
        '200':
          description: successful
  "/api/v4/workout_exercises":
    get:
      summary: list workout_exercises
      tags:
      - Workout Exercises
      security:
      - api_key: []
        bearer: []
      parameters:
      - name: workout_id
        in: query
        required: true
        description: ID of Workout to which the workout exercise is assigned
        schema:
          type: integer
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - "$ref": "#/components/parameters/with_ids"
      responses:
        '200':
          description: successful
    post:
      summary: create workout_exercise
      tags:
      - Workout Exercises
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workout_exercise:
                  type: object
                  required:
                  - id
                  - workout_id
                  - sort_order
                  - exercise_id
                  - block_id
                  properties:
                    workout_id:
                      type: integer
                      description: ID of Workout to which the workout exercise is
                        assigned
                    each_side:
                      type: boolean
                      description: Indicates that the exerise should be completed
                        by each side of the body.
                    notes:
                      type: string
                      description: Workout Exercise notes
                    rest:
                      type: integer
                      description: Rest period in seconds
                    calories:
                      type: integer
                      description: Expected number of calories burned for the exercise
                    sort_order:
                      type: integer
                      description: Sort order of the Workout Exercise within the Workout
                        Block
                    exercise_id:
                      type: integer
                      description: ID of the exercise
                    block_id:
                      type: integer
                      description: ID of the Workout Block to which the Workout Exercise
                        is assigned
                    pr:
                      type: boolean
                      description: personal record
                    sr:
                      type: boolean
                      description: sitewide record
                    measurements:
                      type: array
                      items:
                        properties:
                          stat:
                            type: integer
                          label:
                            type: string
                          value:
                            type: integer
                    fields:
                      type: array
                      items:
                        type: string
  "/api/v4/workout_exercises/{id}":
    parameters:
    - name: id
      in: path
      description: ID of Workout Exercise
      required: true
      schema:
        type: string
    get:
      summary: show workout_exercise
      tags:
      - Workout Exercises
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
    put:
      summary: update workout_exercise
      tags:
      - Workout Exercises
      security:
      - api_key: []
        bearer: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workout_exercise:
                  type: object
                  required:
                  - id
                  - workout_id
                  - sort_order
                  - exercise_id
                  - block_id
                  properties:
                    workout_id:
                      type: integer
                      description: ID of Workout to which the workout exercise is
                        assigned
                    each_side:
                      type: boolean
                      description: Indicates that the exerise should be completed
                        by each side of the body.
                    notes:
                      type: string
                      description: Workout Exercise notes
                    rest:
                      type: integer
                      description: Rest period in seconds
                    calories:
                      type: integer
                      description: Expected number of calories burned for the exercise
                    sort_order:
                      type: integer
                      description: Sort order of the Workout Exercise within the Workout
                        Block
                    exercise_id:
                      type: integer
                      description: ID of the exercise
                    block_id:
                      type: integer
                      description: ID of the Workout Block to which the Workout Exercise
                        is assigned
                    pr:
                      type: boolean
                      description: personal record
                    sr:
                      type: boolean
                      description: sitewide record
                    measurements:
                      type: array
                      items:
                        properties:
                          stat:
                            type: integer
                          label:
                            type: string
                          value:
                            type: integer
                    fields:
                      type: array
                      items:
                        type: string
    delete:
      summary: delete workout_exercise
      tags:
      - Workout Exercises
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
  "/api/v4/plan_workouts":
    get:
      summary: list plan_workouts
      tags:
      - Plan Workouts
      security:
      - api_key: []
        bearer: []
      description: List PlanWorkouts
      parameters:
      - name: for_user
        in: query
        description: Fetch Plan Workouts current user has access to
        schema:
          type: boolean
      - name: user_id
        in: query
        description: Fetch Plan Workouts user with id has access to. must be passed
          with for_user
        schema:
          type: integer
      - name: client_id
        in: query
        description: Fetch Plan Workouts client with id has access to
        schema:
          type: integer
      - name: default_workout_id
        in: query
        description: Fetch PlanWorkouts that have default_workout that matches the
          provided id
        schema:
          type: integer
      - name: plan_id
        in: query
        description: Fetch PlanWorkouts associated with a specific plan
        schema:
          type: integer
      - name: pluck_columns
        in: query
        description: Comma separated list of columns to pluck
        schema:
          type: string
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      responses:
        '200':
          description: successful
    post:
      summary: create plan_workout
      tags:
      - Plan Workouts
      security:
      - api_key: []
        bearer: []
      description: create a plan_workout.
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_workout:
                  type: object
                  required:
                  - name
                  - sort_order
                  - week
                  - day_sort
                  - entry_type
                  properties:
                    name:
                      type: string
                      description: name of PlanWorkout
                    sort_order:
                      type: integer
                      description: sort order of the workout within a WorkoutPlan
                    week:
                      type: integer
                      description: week number of the PlanWorkout within a week-based
                        WorkoutPlan
                    workout_plan_id:
                      type: integer
                      description: ID of the WorkoutPlan
                    description:
                      type: string
                      description: description of the PlanWorkout
                    enable_block:
                      type: boolean
                      description: "`true` if PlanWorkout has multiple blocks"
                    calendar_date:
                      type: string
                      description: If part of a calendar WorkoutPlan, the date of
                        the PlanWorkout in the format YYYY-MM-DD
                    hide_workout:
                      type: boolean
                      description: If part of a calendar WorkoutPlan, `true` if workout
                        should be hidden from client(s).
                    trainer_notes:
                      type: string
                      description: Trainer-facing notes for the PlanWorkout
                    day_sort:
                      type: integer
                      description: PlanWorkout sort within a single day if that day
                        has multiple workouts.
                    assessment_id:
                      type: integer
                      description: Assesssment ID that will be assigned to the client
                        immediately after logging workout
                    entry_type:
                      type: string
                      description: This describes the type of PlanWorkout.<br>`block`
                        - workout contains multiple blocks<br>`no_block` - PlanWorkout
                        contains only one `normal` block which is hidden from the
                        trainer and client<br>`text` - a Text-only PlanWorkout contains
                        only a description. No block or exercise metadata.<br>`text_with_exercises`
                        - PlanWorkout contains blocks and exercises but no metric
                        metadata. only descriptions for the workouts, blocks, and
                        exercises.
                    score_type:
                      type: string
                      description: How to score the logged Workout. one of `time`,
                        `rounds_reps`, `reps`, `volume`, `calories`, `points`, `meters`,
                        `inches`, or `feet`
                    time_limit:
                      type: integer
                      description: maximum time limit in seconds for workout
                    benchmark:
                      type: boolean
                      description: "`true` if this PlanWorkout should be considered
                        a Benchmark"
  "/api/v4/plan_workouts/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: update workout_plan_workout
      tags:
      - Plan Workouts
      security:
      - api_key: []
        bearer: []
      description: Update PlanWorkouts
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_workout:
                  type: object
                  required:
                  - name
                  - sort_order
                  - week
                  - day_sort
                  - entry_type
                  properties:
                    name:
                      type: string
                      description: name of PlanWorkout
                    sort_order:
                      type: integer
                      description: sort order of the workout within a WorkoutPlan
                    week:
                      type: integer
                      description: week number of the PlanWorkout within a week-based
                        WorkoutPlan
                    workout_plan_id:
                      type: integer
                      description: ID of the WorkoutPlan
                    description:
                      type: string
                      description: description of the PlanWorkout
                    enable_block:
                      type: boolean
                      description: "`true` if PlanWorkout has multiple blocks"
                    calendar_date:
                      type: string
                      description: If part of a calendar WorkoutPlan, the date of
                        the PlanWorkout in the format YYYY-MM-DD
                    hide_workout:
                      type: boolean
                      description: If part of a calendar WorkoutPlan, `true` if workout
                        should be hidden from client(s).
                    trainer_notes:
                      type: string
                      description: Trainer-facing notes for the PlanWorkout
                    day_sort:
                      type: integer
                      description: PlanWorkout sort within a single day if that day
                        has multiple workouts.
                    assessment_id:
                      type: integer
                      description: Assesssment ID that will be assigned to the client
                        immediately after logging workout
                    entry_type:
                      type: string
                      description: This describes the type of PlanWorkout.<br>`block`
                        - workout contains multiple blocks<br>`no_block` - PlanWorkout
                        contains only one `normal` block which is hidden from the
                        trainer and client<br>`text` - a Text-only PlanWorkout contains
                        only a description. No block or exercise metadata.<br>`text_with_exercises`
                        - PlanWorkout contains blocks and exercises but no metric
                        metadata. only descriptions for the workouts, blocks, and
                        exercises.
                    score_type:
                      type: string
                      description: How to score the logged Workout. one of `time`,
                        `rounds_reps`, `reps`, `volume`, `calories`, `points`, `meters`,
                        `inches`, or `feet`
                    time_limit:
                      type: integer
                      description: maximum time limit in seconds for workout
                    benchmark:
                      type: boolean
                      description: "`true` if this PlanWorkout should be considered
                        a Benchmark"
    get:
      summary: show workout_plan_workout
      tags:
      - Plan Workouts
      description: Fetch plan workout
      security:
      - api_key: []
        bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  workout_plan_id:
                    type: integer
                  group_id:
                    type: integer
                  week:
                    type: integer
                  sort_order:
                    type: integer
                  enable_block:
                    type: boolean
                  pdf:
                    type: object
                    properties:
                      base:
                        type: string
                      trainer:
                        type: string
                  sub_trainer_id:
                    type: integer
                  calendar_date:
                    type: string
                  hide_workout:
                    type: boolean
                  links:
                    type: object
                    properties:
                      capabilities:
                        type: string
                      alternates:
                        type: string
                  trainer_notes:
                    type: string
                  day_sort:
                    type: integer
                  blocks:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        block_type:
                          type: string
                        time:
                          type: integer
                        rounds:
                          type: integer
                        sort_order:
                          type: integer
                        notes:
                          type: string
                        instructions:
                          type: string
                        save_metric:
                          type: boolean
                        workout_id:
                          type: integer
                        created_at:
                          type: integer
                        updated_at:
                          type: integer
                        exercises:
                          type: array
                  assessment_id:
                    type: integer
                  entry_type:
                    type: string
                  score_type:
                    type: string
                  time_limit:
                    type: integer
                  copied_from_plan_id:
                    type: integer
                  benchmark:
                    type: boolean
                  benchmark_id:
                    type: integer
                  day:
                    type: integer
                  alternate_workouts:
                    type: array
                  label:
                    type: object
                  default_workout_id:
                    type: integer
                  alternates_count:
                    type: integer
                  workout_description:
                    type: string
                  created_at:
                    type: integer
                  updated_at:
                    type: integer
    delete:
      summary: delete plan_workout
      tags:
      - Plan Workouts
      security:
      - api_key: []
        bearer: []
      description: Delete PlanWorkouts
      responses:
        '200':
          description: successful
  "/api/v4/workout-plans":
    get:
      summary: list workout_plans
      tags:
      - Workout Plans
      description: List non-calendar workout plans
      parameters:
      - name: for_user
        in: query
        description: limit search to workout plans assigned to current user
        schema:
          type: boolean
      - name: for_user_id
        in: query
        description: limit search to workout plans assigned to user with id
        schema:
          type: integer
      - name: group_plans
        in: query
        description: Workout Plans assigned to groups the user has access to
        schema:
          type: boolean
      - name: available_to_group
        in: query
        description: 'Workout plans assigned to a specific group that is available
          to the user: must be passed with group_id'
        schema:
          type: boolean
      - name: group_id
        in: query
        description: 'workouts plans assigned to a group with the id: only used if
          passed with available_to_group'
        schema:
          type: integer
      - name: user_created
        in: query
        description: return list of workout plans created by user
        schema:
          type: boolean
      - name: ids_only
        in: query
        description: render Workout Plan record without serializer
        schema:
          type: boolean
      - name: summary_only
        in: query
        description: 'do not include wokouts: TRUE IS REQUIRED FOR API TESTING. SET
          AS TRUE'
        required: true
        schema:
          type: boolean
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - "$ref": "#/components/parameters/with_ids"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    properties:
                      total:
                        type: integer
                        description: total number of workouts found
                  workout_plan:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          description: ID of the Plan Workout
                        name:
                          type: string
                          description: Name of the Plan Workout
                        recommended_days_per_week:
                          type: integer
                          description: recommended days per week
                        checkout_description:
                          type: string
                          description: description displayed on checkout
                        recommended_length:
                          type: integer
                          description: recommended plan length
                        diet_keyword:
                          type: string
                        diet_text:
                          type: string
                        diet_plan:
                          type: string
                        gender:
                          type: integer
                        premium:
                          type: boolean
                        video_url:
                          type: string
                        small_plan_image:
                          type: string
                        objectives:
                          type: array
                          items:
                            type: string
                          description: objective tags
                        objective_ids:
                          type: array
                          items:
                            type: integer
                        difficulty_level:
                          type: string
                          description: difficulty tag
                        large_plan_image:
                          type: string
                          description: url for the workout plan large image
                        ios_large_plan_image:
                          type: string
                        ios_small_plan_image:
                          type: string
                        days:
                          type: array
                          items:
                            type: integer
                          description: days that the workout plan covers
                        difficulty_level_id:
                          type: integer
                          description: difficulty level id
                        featured:
                          type: boolean
                        certified:
                          type: boolean
                        wod:
                          type: boolean
                        client_ids:
                          type: array
                          items:
                            type: integer
                        user_id:
                          type: integer
                          description: the id of the user that created the workout
                            plan
                        group:
                          type: integer
                          description: Id of group that the plan is assigned to
                        use_metric:
                          type: boolean
                        seller_id:
                          type: integer
                        price:
                          type: integer
                        why_purchase:
                          type: string
                        affiliate_amount:
                          type: integer
                        resources:
                          type: object
                        delay_interval:
                          type: integer
                        ratings_count:
                          type: integer
                        sub_trainer_id:
                          type: integer
                        start_date:
                          type: string
                        links:
                          type: object
                          properties:
                            planAssignments:
                              type: string
                            workouts:
                              type: string
                            capabilities:
                              type: string
                            habits:
                              type: string
                            upsells:
                              type: string
                        status:
                          type: string
                        tags:
                          type: array
                          items:
                            type: string
                        cta:
                          type: object
                          properties:
                            bgColor:
                              type: string
                            buttonUrl:
                              type: string
                            planTitle:
                              type: string
                            textColor:
                              type: string
                            buttonText:
                              type: string
                            buttonColor:
                              type: string
                            firstBullet:
                              type: string
                            thirdBullet:
                              type: string
                            secondBullet:
                              type: string
                            buttonTextColor:
                              type: string
                        alternate_for_sale:
                          type: boolean
                        welcome_message:
                          type: string
                        next_plan_id:
                          type: integer
                          description: Id of the workout plan that will start after
                            this plan is completed
                        calendar_client_id:
                          type: integer
                        calendar_group_id:
                          type: integer
                        hide_from_finder:
                          type: boolean
                        calendar_user_id:
                          type: integer
                        assigned_plans:
                          type: array
                          items:
                            properties:
                              id:
                                type: integer
                              days:
                                type: array
                              name:
                                type: string
                              end_date:
                                type: integer
                              copied_at:
                                type: string
                              start_date:
                                type: integer
                              all_workouts:
                                type: array
                              repeat_count:
                                type: integer
                              include_empty:
                                type: boolean
                              schedule_next:
                                type: boolean
                              prevent_next_workout:
                                type: boolean
                        prevent_next_workout:
                          type: boolean
                        assign_next_plan:
                          type: boolean
                        free_expiration:
                          type: string
                        hide_workout_days:
                          type: integer
                        hide_workout_week_day:
                          type: integer
                        hide_workout_week_hour:
                          type: integer
                        exercise_swaps:
                          type: array
                          items:
                            properties:
                              exercise_id:
                                type: integer
                              new_exercise_id:
                                type: integer
                        thank_you_message:
                          type: string
                        thank_you_page:
                          type: string
                        destination_id:
                          type: integer
                        destination_type:
                          type: string
                        last_published_at:
                          type: integer
                          description: unix timestamp of the last published date
                        uses_new_creator:
                          type: boolean
                          description: Workout Plan was created at or currently uses
                            the new Workout Plan creator
                        allow_use_scheduled:
                          type: boolean
                          description: Workout Plan was created at or currently uses
                            the new Workout Plan creator
                        num_weeks:
                          type: integer
                        calendar_service_id:
                          type: integer
                        share_image_url:
                          type: string
                        share_image_id:
                          type: string
                        payment_options:
                          type: array
                          items:
                            properties:
                              type:
                                type: string
                              amount:
                                type: integer
                              name:
                                type: string
                              currency:
                                type: string
                              location:
                                type: string
                          description: Payment Options for purchasing the Workout
                            Plan
                        use_new_checkout:
                          type: boolean
                        slug:
                          type: string
                        rating:
                          type: integer
                        plan_description:
                          type: string
                        alternate_exercise_video_tag:
                          type: string
                          description: The default video tag to use for the plan
                        created_at:
                          type: integer
                          description: Unix Timestamp of the date the Workout Plan
                            was created
                        updated_at:
                          type: integer
                          description: Unix Timestamp of the date the Workout Plan
                            was last updated
    post:
      summary: create workout_plan
      tags:
      - Workout Plans
      security:
      - api_key: []
        bearer: []
      description: create a workout_plan.
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: integer
                  description: Name of workout plan
                status:
                  type: string
                  description: "`draft` - plan is not published. not visible to users.<br>`trainer`
                    - plan is only visible to immediately assigned group members and
                    clients.`public_wl` - plan is visible for purchase as well as
                    assigned group members and clients"
                start_date:
                  type: string
                  description: if a calendar plan, the date the calendar was created
                    in YYYY/MM/DD
                plan_image_id:
                  type: integer
                  description: ID of the WorkoutPlanImage
                description:
                  type: string
                  description: description of the plan
                prevent_next_workout:
                  type: boolean
                  description: '`true` if each workout will not be visible/assigned
                    until the current workout is logged. The current workout will
                    always show "today" if not logged yet.'
                difficulty_level_id:
                  type: integer
                  description: ID of the difficulty level
                welcome_message:
                  type: string
                  description: If plan is purchased, this welcome message will be
                    displayed to the user when they visit the Dashboard on the web.
                use_metric:
                  type: boolean
                  description: default value for `use_metric` on each PlanWorkout
                price:
                  type: integer
                  description: Price of plan in cents
                affiliate_amount:
                  type: integer
                  description: In cents. If this plan is purchased through an affiliate
                    code, the purchaser will receive credit on their account.
                why_purchase:
                  type: string
                  description: description shown if user views the workout plan and
                    has not purchased it yet.
                checkout_description:
                  type: string
                  description: Description to show below plan name in the plan card
                    when purchasing. Used as a replacaement to "X Weeks / Y Days a
                    Week"
                user_id:
                  type: integer
                  description: the head trainer ID
                next_plan_id:
                  type: integer
                  description: ID of the next workout plan that will immediately start
                    for a user when the last workout of this plan is logged.
                free_expiration:
                  type: integer
                  description: If this plan is avaialble for free for all users, the
                    number of days it will be avaiable after a user creates their
                    account.
                sub_trainer_id:
                  type: integer
                  description: the user ID of the trainer that created the plan if
                    it was not the head trainer.
                hide_workout_days:
                  type: integer
                  description: for calendar plans, the number of days after 'today'
                    that hidden workouts should be hidden from the end-user.
                hide_workout_week_day:
                  type: integer
                  description: hide workouts for this week until this day of the week
                    arrives (week-day integer 0-based index). used with `hide_workout_week_hour`
                hide_workout_week_hour:
                  type: integer
                  description: the hour that hidden workouts should be shown. Used
                    with `hide_workout_week_day`.
                thank_you_message:
                  type: string
                  description: Message to show on the thank you page after purchase.
                thank_you_page:
                  type: string
                  description: alternate thank you page URL to redirect the user to
                    after purchase.
                uses_new_creator:
                  type: boolean
                  description: always pass `true`
                num_weeks:
                  type: integer
                  description: Number of weeks in the plan.
                share_image_id:
                  type: integer
                  description: ID of the Asset/Image
                subtitle:
                  type: string
                  description: subtitle of workout plan
                exercise_swaps:
                  type: array
                  items:
                    properties:
                      exercise_id:
                        type: integer
                        description: ID of Exercise to swap
                      new_exercise_id:
                        type: integer
                        description: ID of Exercise to swap to
                calendar_workout_ids:
                  type: array
                  items:
                    type: integer
                    description: Pass ID(s) if creating a plan from a list of PlanWorkout
                      Ids
                days:
                  type: array
                  items:
                    type: integer
                    description: Days of the week for the Workout Plan. 0-index day
                      of the week integers. For example, `0` is Sunday
                tags:
                  type: array
                  items:
                    type: string
                    description: Tags used for organizing a trainer's list of plans.
                difficulty_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to difficulty
                equipment_optional_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to optional equipment
                equipment_required_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to required equipment
                workout_time_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to workout time
                frequency_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to frequency (e.g. days of the week)
                badge_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to general badges
                objective_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to objectives
                resources:
                  type: array
                  items:
                    properties:
                      name:
                        type: string
                        description: name of resource
                      link:
                        type: string
                        description: URL to resource
  "/api/v4/workout-plans/{id}":
    parameters:
    - name: id
      in: path
      description: id of the Workout Plan
      required: true
      schema:
        type: integer
    get:
      summary: show workout_plan
      tags:
      - Workout Plans
      description: Fetch workout plan
      parameters:
      - name: workout_summary
        in: query
        description: 'do not include wokouts: TRUE IS REQUIRED FOR API TESTING. SET
          AS TRUE'
        schema:
          type: boolean
      - name: exclude_workouts
        in: query
        description: if request is an app request, excludes workouts
        required: true
        schema:
          type: boolean
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID of the Plan Workout
                  name:
                    type: string
                    description: Name of the Plan Workout
                  recommended_days_per_week:
                    type: integer
                    description: recommended days per week
                  checkout_description:
                    type: string
                    description: description displayed on checkout
                  recommended_length:
                    type: integer
                    description: recommended plan length
                  diet_keyword:
                    type: string
                  diet_text:
                    type: string
                  diet_plan:
                    type: string
                  gender:
                    type: integer
                  premium:
                    type: boolean
                  video_url:
                    type: string
                  small_plan_image:
                    type: string
                  objectives:
                    type: array
                    items:
                      type: string
                    description: objective tags
                  objective_ids:
                    type: array
                    items:
                      type: integer
                  difficulty_level:
                    type: string
                    description: difficulty tag
                  large_plan_image:
                    type: string
                    description: url for the workout plan large image
                  ios_large_plan_image:
                    type: string
                  ios_small_plan_image:
                    type: string
                  days:
                    type: array
                    items:
                      type: integer
                    description: days that the workout plan covers
                  difficulty_level_id:
                    type: integer
                    description: difficulty level id
                  featured:
                    type: boolean
                  certified:
                    type: boolean
                  wod:
                    type: boolean
                  client_ids:
                    type: array
                    items:
                      type: integer
                  user_id:
                    type: integer
                    description: the id of the user that created the workout plan
                  group:
                    type: integer
                    description: Id of group that the plan is assigned to
                  use_metric:
                    type: boolean
                  seller_id:
                    type: integer
                  price:
                    type: integer
                  why_purchase:
                    type: string
                  affiliate_amount:
                    type: integer
                  resources:
                    type: object
                  delay_interval:
                    type: integer
                  ratings_count:
                    type: integer
                  sub_trainer_id:
                    type: integer
                  start_date:
                    type: string
                  links:
                    type: object
                    properties:
                      planAssignments:
                        type: string
                      workouts:
                        type: string
                      capabilities:
                        type: string
                      habits:
                        type: string
                      upsells:
                        type: string
                  status:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
                  cta:
                    type: object
                    properties:
                      bgColor:
                        type: string
                      buttonUrl:
                        type: string
                      planTitle:
                        type: string
                      textColor:
                        type: string
                      buttonText:
                        type: string
                      buttonColor:
                        type: string
                      firstBullet:
                        type: string
                      thirdBullet:
                        type: string
                      secondBullet:
                        type: string
                      buttonTextColor:
                        type: string
                  alternate_for_sale:
                    type: boolean
                  welcome_message:
                    type: string
                  next_plan_id:
                    type: integer
                    description: Id of the workout plan that will start after this
                      plan is completed
                  calendar_client_id:
                    type: integer
                  calendar_group_id:
                    type: integer
                  hide_from_finder:
                    type: boolean
                  calendar_user_id:
                    type: integer
                  assigned_plans:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        days:
                          type: array
                        name:
                          type: string
                        end_date:
                          type: integer
                        copied_at:
                          type: string
                        start_date:
                          type: integer
                        all_workouts:
                          type: array
                        repeat_count:
                          type: integer
                        include_empty:
                          type: boolean
                        schedule_next:
                          type: boolean
                        prevent_next_workout:
                          type: boolean
                  prevent_next_workout:
                    type: boolean
                  assign_next_plan:
                    type: boolean
                  free_expiration:
                    type: string
                  hide_workout_days:
                    type: integer
                  hide_workout_week_day:
                    type: integer
                  hide_workout_week_hour:
                    type: integer
                  exercise_swaps:
                    type: array
                    items:
                      properties:
                        exercise_id:
                          type: integer
                        new_exercise_id:
                          type: integer
                  thank_you_message:
                    type: string
                  thank_you_page:
                    type: string
                  destination_id:
                    type: integer
                  destination_type:
                    type: string
                  last_published_at:
                    type: integer
                    description: unix timestamp of the last published date
                  uses_new_creator:
                    type: boolean
                    description: Workout Plan was created at or currently uses the
                      new Workout Plan creator
                  allow_use_scheduled:
                    type: boolean
                    description: Workout Plan was created at or currently uses the
                      new Workout Plan creator
                  num_weeks:
                    type: integer
                  calendar_service_id:
                    type: integer
                  share_image_url:
                    type: string
                  share_image_id:
                    type: string
                  payment_options:
                    type: array
                    items:
                      properties:
                        type:
                          type: string
                        amount:
                          type: integer
                        name:
                          type: string
                        currency:
                          type: string
                        location:
                          type: string
                    description: Payment Options for purchasing the Workout Plan
                  use_new_checkout:
                    type: boolean
                  slug:
                    type: string
                  rating:
                    type: integer
                  plan_description:
                    type: string
                  created_at:
                    type: integer
                    description: Unix Timestamp of the date the Workout Plan was created
                  updated_at:
                    type: integer
                    description: Unix Timestamp of the date the Workout Plan was last
                      updated
    put:
      summary: update workout_plan
      tags:
      - Workout Plans
      security:
      - api_key: []
        bearer: []
      description: update a workout_plan.
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: integer
                  description: Name of workout plan
                status:
                  type: string
                  description: "`draft` - plan is not published. not visible to users.<br>`trainer`
                    - plan is only visible to immediately assigned group members and
                    clients.`public_wl` - plan is visible for purchase as well as
                    assigned group members and clients"
                start_date:
                  type: string
                  description: if a calendar plan, the date the calendar was created
                    in YYYY/MM/DD
                plan_image_id:
                  type: integer
                  description: ID of the WorkoutPlanImage
                description:
                  type: string
                  description: description of the plan
                prevent_next_workout:
                  type: boolean
                  description: '`true` if each workout will not be visible/assigned
                    until the current workout is logged. The current workout will
                    always show "today" if not logged yet.'
                difficulty_level_id:
                  type: integer
                  description: ID of the difficulty level
                welcome_message:
                  type: string
                  description: If plan is purchased, this welcome message will be
                    displayed to the user when they visit the Dashboard on the web.
                use_metric:
                  type: boolean
                  description: default value for `use_metric` on each PlanWorkout
                price:
                  type: integer
                  description: Price of plan in cents
                affiliate_amount:
                  type: integer
                  description: In cents. If this plan is purchased through an affiliate
                    code, the purchaser will receive credit on their account.
                why_purchase:
                  type: string
                  description: description shown if user views the workout plan and
                    has not purchased it yet.
                checkout_description:
                  type: string
                  description: Description to show below plan name in the plan card
                    when purchasing. Used as a replacaement to "X Weeks / Y Days a
                    Week"
                user_id:
                  type: integer
                  description: the head trainer ID
                next_plan_id:
                  type: integer
                  description: ID of the next workout plan that will immediately start
                    for a user when the last workout of this plan is logged.
                free_expiration:
                  type: integer
                  description: If this plan is avaialble for free for all users, the
                    number of days it will be avaiable after a user creates their
                    account.
                sub_trainer_id:
                  type: integer
                  description: the user ID of the trainer that created the plan if
                    it was not the head trainer.
                hide_workout_days:
                  type: integer
                  description: for calendar plans, the number of days after 'today'
                    that hidden workouts should be hidden from the end-user.
                hide_workout_week_day:
                  type: integer
                  description: hide workouts for this week until this day of the week
                    arrives (week-day integer 0-based index). used with `hide_workout_week_hour`
                hide_workout_week_hour:
                  type: integer
                  description: the hour that hidden workouts should be shown. Used
                    with `hide_workout_week_day`.
                thank_you_message:
                  type: string
                  description: Message to show on the thank you page after purchase.
                thank_you_page:
                  type: string
                  description: alternate thank you page URL to redirect the user to
                    after purchase.
                uses_new_creator:
                  type: boolean
                  description: always pass `true`
                num_weeks:
                  type: integer
                  description: Number of weeks in the plan.
                share_image_id:
                  type: integer
                  description: ID of the Asset/Image
                subtitle:
                  type: string
                  description: subtitle of workout plan
                exercise_swaps:
                  type: array
                  items:
                    properties:
                      exercise_id:
                        type: integer
                        description: ID of Exercise to swap
                      new_exercise_id:
                        type: integer
                        description: ID of Exercise to swap to
                calendar_workout_ids:
                  type: array
                  items:
                    type: integer
                    description: Pass ID(s) if creating a plan from a list of PlanWorkout
                      Ids
                days:
                  type: array
                  items:
                    type: integer
                    description: Days of the week for the Workout Plan. 0-index day
                      of the week integers. For example, `0` is Sunday
                tags:
                  type: array
                  items:
                    type: string
                    description: Tags used for organizing a trainer's list of plans.
                difficulty_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to difficulty
                equipment_optional_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to optional equipment
                equipment_required_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to required equipment
                workout_time_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to workout time
                frequency_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to frequency (e.g. days of the week)
                badge_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to general badges
                objective_tags:
                  type: array
                  items:
                    type: string
                    description: Tags related to objectives
                resources:
                  type: array
                  items:
                    properties:
                      name:
                        type: string
                        description: name of resource
                      link:
                        type: string
                        description: URL to resource
    delete:
      summary: delete workout_plan
      tags:
      - Workout Plans
      security:
      - api_key: []
        bearer: []
      description: delete a workout_plan.
      responses:
        '200':
          description: successful
  "/api/v4/workout-plans/{id}/rep_maxes":
    parameters:
    - name: id
      in: path
      description: id of the Workout Plan
      required: true
      schema:
        type: integer
    get:
      summary: user rep rep maxes associated with a plan
      tags:
      - Workout Plans
      description: return all rep maxes associated with a plan
      responses:
        '200':
          description: successful
  "/api/v4/workouts":
    get:
      summary: list workouts
      tags:
      - Workouts
      security:
      - api_key: []
        bearer: []
      description: list logged workouts
      parameters:
      - name: user_id
        in: query
        required: false
        description: Returns completed workouts for this User. By default, returns
          completed workouts for the current User
        schema:
          type: integer
      - name: for_trainer
        in: query
        required: false
        description: Returns all completed workouts for the platform if the current_user
          is a trainer.
        schema:
          type: boolean
      - name: group_id
        in: query
        required: false
        description: if `for_trainer` is `true`, returns completed workouts for members
          of this group.
        schema:
          type: integer
      - name: start_date
        in: query
        required: false
        description: Returns completed workouts after this start date. Must be used
          in conjunction with `end_date`
        schema:
          type: integer
      - name: end_date
        in: query
        required: false
        description: Returns completed workouts before this end date. Must be used
          in conjunction with `start_date`
        schema:
          type: integer
      - name: all_fields
        in: query
        required: false
        description: If true, returns all workout attributes including blocks, exercises,
          etc.
        schema:
          type: boolean
      - "$ref": "#/components/parameters/per"
      - "$ref": "#/components/parameters/page"
      - "$ref": "#/components/parameters/q"
      - "$ref": "#/components/parameters/pluck_columns"
      - "$ref": "#/components/parameters/with_ids"
      responses:
        '200':
          description: successful
    post:
      summary: create workout
      tags:
      - Workouts
      security:
      - api_key: []
        bearer: []
      description: create a logged workout.
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workout:
                  type: object
                  required:
                  - provider
                  - via_logger
                  - user_id
                  - completed
                  - total_workout_time
                  - logged_at
                  - workout_date
                  - time_zone
                  - name
                  - entry_type
                  properties:
                    provider:
                      type: string
                      description: The origin of the workout (e.g. `ios` or `android`)
                    gym_id:
                      type: integer
                      description: The Location ID or the Gym ID that the workout
                        was logged at. (Legacy - no longer used)
                    via_logger:
                      type: boolean
                      description: always `true`
                    buddys:
                      type: array
                      items:
                        type: integer
                        description: Other User ID(s) that logged the workout with
                          this User.
                      description: "(Legacy - no longer used)"
                    mood:
                      type: integer
                      description: 1 to 5 worst to best to describe the mood of the
                        user after completing the workout.
                    user_id:
                      type: integer
                      description: the ID of the User to complete the workout for.
                        Usually the ID of the current User.
                    completed:
                      type: boolean
                      description: Set to `true` when logging a workout.
                    total_workout_time:
                      type: integer
                      description: Total time to complete the workout in seconds.
                    logged_at:
                      type: integer
                      description: Unix timestamp when the workout was completed.
                    workout_date:
                      type: integer
                      description: Midnight UTC in Unix timestamp of the date the
                        workout was completed.
                    plan_workout_id:
                      type: integer
                      description: PlanWorkout ID if the workout was logged from a
                        PlanWorkout.
                    time_zone:
                      type: string
                      description: Timezone name that the workout was completed in.
                        See `ActiveSupport::TimeZone` for list of timezone names that
                        can be passed.
                    name:
                      type: string
                      description: Name of the workout.
                    entry_type:
                      type: string
                      description: 'Entry type of the workout. one of: `no_block`,
                        `block`, `text` or `text_with_exercises`'
                    blocks_attributes:
                      type: array
                      items:
                        required:
                        - block_type
                        - exercises_attributes
                        properties:
                          rounds:
                            type: integer
                            description: Number of rounds required for superset or
                              circuit blocks.
                          name:
                            type: string
                            description: Name of block.
                          time:
                            type: integer
                            description: time requirement in seconds for circuit blocks
                          block_type:
                            type: string
                            description: "`normal` (just like any regular workout
                              where you complete all sets of each exercise before
                              moving to the next exercise.)<br>`superset` (call for
                              completing one set of each exercise in the superset
                              before starting over from the beginning)<br>`circuit`
                              (similar to Superset blocks, but they allow for a time
                              per round requirement for each exercise in a set)<br>`"
                          exercises_attributes:
                            type: array
                            items:
                              required:
                              - fields
                              - exercise_id
                              - workout_exercise_sets_attributes
                              properties:
                                fields:
                                  type: array
                                  items:
                                    type: string
                                    description: 'Exercise measurement(s) that were
                                      used for this workout: `reps`, `weight`, `distance`,
                                      `time`'
                                exercise_id:
                                  type: integer
                                  description: Exercise ID that was logged.
                                calories:
                                  type: integer
                                  description: Number of calories for this logged
                                    exercise.
                                workout_exercise_sets_attributes:
                                  type: array
                                  items:
                                    required:
                                    - reps
                                    properties:
                                      reps:
                                        type: integer
                                        description: An Exercise rep
                                      distance_measurement:
                                        type: string
                                        description: 'distance measurment that was
                                          logged. One of: `miles`, `yards`, `feet`'
                                      weight:
                                        type: integer
                                        description: weight in pounds
                                      distance:
                                        type: integer
                                        description: Logged distance stored in imperial.
                                          Depends on `distance_measurement`
                                      time:
                                        type: integer
                                        description: time in seconds
  "/api/v4/workouts/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the workout
      required: true
      schema:
        type: integer
    get:
      summary: show workout
      tags:
      - Workouts
      security:
      - api_key: []
        bearer: []
      description: fetch a logged workout for the current user.
      parameters:
      - name: all_fields
        in: query
        required: false
        description: If true, returns all workout attributes including blocks, exercises,
          etc.
        schema:
          type: boolean
      responses:
        '200':
          description: successful
    put:
      summary: update workout
      tags:
      - Workouts
      security:
      - api_key: []
        bearer: []
      description: update a logged workout for the current user.
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workout:
                  required:
                  - provider
                  - via_logger
                  - user_id
                  - completed
                  - total_workout_time
                  - logged_at
                  - workout_date
                  - time_zone
                  - name
                  - entry_type
                  properties:
                    provider:
                      type: string
                      description: The origin of the workout (e.g. `ios` or `android`)
                    gym_id:
                      type: integer
                      description: The Location ID or the Gym ID that the workout
                        was logged at. (Legacy - no longer used)
                    via_logger:
                      type: boolean
                      description: always `true`
                    buddys:
                      type: array
                      items:
                        type: integer
                        description: Other User ID(s) that logged the workout with
                          this User.
                      description: "(Legacy - no longer used)"
                    mood:
                      type: integer
                      description: 1 to 5 worst to best to describe the mood of the
                        user after completing the workout.
                    user_id:
                      type: integer
                      description: the ID of the User to complete the workout for.
                        Usually the ID of the current User.
                    completed:
                      type: boolean
                      description: Set to `true` when logging a workoutworkout.
                    total_workout_time:
                      type: integer
                      description: Total time to complete the workout in seconds.
                    logged_at:
                      type: integer
                      description: Unix timestamp when the workout was completed.
                    workout_date:
                      type: integer
                      description: Midnight UTC in Unix timestamp of the date the
                        workout was completed.
                    plan_workout_id:
                      type: integer
                      description: PlanWorkout ID if the workout was logged from a
                        PlanWorkout.
                    time_zone:
                      type: string
                      description: Timezone name that the workout was completed in.
                        See `ActiveSupport::TimeZone` for list of timezone names that
                        can be passed.
                    name:
                      type: string
                      description: Name of the workout.
                    entry_type:
                      type: string
                      description: 'Entry type of the workout. one of: `no_block`,
                        `block`, `text` or `text_with_exercises`'
                    blocks_attributes:
                      type: array
                      items:
                        required:
                        - block_type
                        - exercises_attributes
                        properties:
                          rounds:
                            type: integer
                            description: Number of rounds required for superset or
                              circuit blocks.
                          name:
                            type: string
                            description: Name of block.
                          time:
                            type: integer
                            description: time requirement in seconds for circuit blocks
                          block_type:
                            type: string
                            description: "`normal` (just like any regular workout
                              where you complete all sets of each exercise before
                              moving to the next exercise.)<br>`superset` (call for
                              completing one set of each exercise in the superset
                              before starting over from the beginning)<br>`circuit`
                              (similar to Superset blocks, but they allow for a time
                              per round requirement for each exercise in a set)<br>`"
                          exercises_attributes:
                            type: array
                            items:
                              required:
                              - fields
                              - exercise_id
                              - workout_exercise_sets_attributes
                              properties:
                                fields:
                                  type: array
                                  items:
                                    type: string
                                    description: 'Exercise measurement(s) that were
                                      used for this workout: `reps`, `weight`, `distance`,
                                      `time`'
                                exercise_id:
                                  type: integer
                                  description: Exercise ID that was logged.
                                calories:
                                  type: integer
                                  description: Number of calories for this logged
                                    exercise.
                                workout_exercise_sets_attributes:
                                  type: array
                                  items:
                                    required:
                                    - reps
                                    properties:
                                      reps:
                                        type: integer
                                        description: An Exercise rep
                                      distance_measurement:
                                        type: string
                                        description: 'distance measurment that was
                                          logged. One of: `miles`, `yards`, `feet`'
                                      weight:
                                        type: integer
                                        description: weight in pounds
                                      distance:
                                        type: integer
                                        description: Logged distance stored in imperial.
                                          Depends on `distance_measurement`
                                      time:
                                        type: integer
                                        description: time in seconds
    delete:
      summary: delete workout
      tags:
      - Workouts
      security:
      - api_key: []
        bearer: []
      description: delete a logged workout for the current user.
      responses:
        '200':
          description: successful
servers:
- url: https://online.brxperformance.com
  description: Production
  variables:
    defaultHost:
      default: online.brxperformance.com
      description: API Request Host (add your host here)
tags:
- name: Authentication
  description: Authentication related endpoints
- name: Calendar
  description: A Calendar lists decribes a collection of events that the User can
    take action on. Can be a scheduled workout, logged workout, habit, assessment,
    checkin, waiver, or, appointment-related.
- name: Exercises
  description: Exercise related endpoints
- name: User Plans
  description: A user plan describes how a user follows a workout plan
- name: Workouts
  description: A Workout describes a logged workout by a User. Can be logged from
    a PlanWorkout, or can be completely custom (created by the User).
- name: Users
  description: Fetch user details
- name: Workout Plans
  description: workout plans come in two variants calendar and standard. calendar
    workout plans have a start date and standard do not. A workout plan is a collection
    of sheduled plan workouts, reminders, and habits.
- name: Plan Workouts
  description: A collection of exercises orginized into blocks that can be scheduled
    on a workout plan
- name: Plan Exercises
  description: An object that includes measurement and exercise metadata to be logged
    by a User. Contained inside of a PlanBlock and PlanWorkout.
- name: Plan Blocks
  description: A collection of exercises that can be logged by a User in different
    ways. Contained inside of a PlanWorkout.
- name: Group Resources
  description: Resources related to groups
- name: Resources
  description: Resources assigned to a user
- name: Favorites
  description: Items that a user has favorited
- name: Groups
  description: COMING SOON - managing groups
- name: Conversations
  description: COMING SOON - managing conversations
- name: Visits
  description: object that describes a users attendance at a location (check-in) or
    appointment. Covers reservations and cancellations.
- name: Waitlist Entries
  description: object that describes a list of users waiting for a visit to an appointment
    to become available.
- name: Appointments
  description: An object that describes an event at a place and time that clients
    can book or be booked to (modeled by visits). Appointments can be tied to a location,
    a trainer, and a service.
- name: Schedules
  description: COMING SOON - managing schedules
- name: Locations
  description: An Object used to tie trainers, visits, appointments and other records
    to a physical or abstract place
- name: Sheduled Appointments
  description: manages recurring appointments. an object that describes a series of
    appointments that can be booked by clients.
- name: Scheduled Appointment Members
  description: an object that that allows a user to automatically create visits for
    a scheduled appointment
- name: Services
  description: an object that describes duration, booking behavior and price of a
    service offered by the platform
components:
  parameters:
    per:
      name: per
      in: query
      type: integer
      description: The number of records to return per page.  If set, the response
        will return a meta field with the total number of records
    page:
      name: page
      in: query
      type: integer
      description: The current page to return.  If set, the response will return a
        meta field with the total number of records.
    q:
      name: q
      in: query
      type: string
      description: 'Filters the response. See Ransack link for specific documentation:
        https://github.com/activerecord-hackery/ransack'
    pluck_columns:
      name: pluck_columns
      in: query
      type: string
      description: Returns only the specified properties in a comma separated list.  If
        not specified, all properties will be returned.
    with_ids:
      name: with_ids
      in: query
      type: string
      description: Fetch only the records that match the ids specified (comma delimited
        list).  Pagination is ignored if with_ids is specified
    fbm_waitlist_entry:
      name: waitlist_entry
      in: body
      schema:
        type: object
        properties:
          user_id:
            type: integer
          status:
            type: string
            enum:
            - waiting
            - enrolled
          appointment_id:
            type: integer
          email:
            type: string
          first_name:
            type: string
          last_name:
            type: string
          phone_number:
            type: string
    fbm_visit:
      name: visit
      in: body
      schema:
        type: object
        properties:
          user_id:
            type: integer
          status:
            type: string
            enum:
            - reserved
            - registered
            - completed
            - noshowed
            - late_cancelled
            - cancelled
            - cancel_or_late_cancel
            description: 'reserved: visit created for appointment and counts against
              max<br>registered: visit is confirmed by trainer/client<br>completed:
              visit is completed and charged if not already charged<br>noshowed: visit
              marked for no show fees<br>late_cancelled: cancelled after late cancel
              window<br>cancelled: cancelled before late cancel window<br>cancel_or_late_cancel:
              cancelled or late cancelled'
          appointment_id:
            type: integer
          registered_at:
            type: string
            description: Time status is set to registered
          completed_at:
            type: string
            description: Time status is set to completed
          noshow_at:
            type: string
            description: Time status is set to noshowed
          cancelled_at:
            type: string
            description: Time status is set to cancelled
          created_at:
            type: string
            description: Time status is set to reserved
          paid:
            type: boolean
          user_name:
            type: string
          paid_by_package_id:
            type: integer
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
          phone_number:
            type: string
          has_membership:
            type: boolean
          public_booking:
            type: boolean
          with_guest:
            type: boolean
          cancel_recurring:
            type: boolean
          charge_cancellation:
            type: boolean
          charge_noshow:
            type: boolean
          reschedule_id:
            type: integer
          no_require_prepayment:
            type: boolean
          determine_package_id:
            type: boolean
          waitlist_entry_id:
            type: integer
          private_notes:
            type: string
    fbm_service:
      name: service
      in: body
      schema:
        type: object
        properties:
          name:
            type: string
          service_type:
            type: string
            enum:
            - group_class
            - appointment
          description:
            type: string
          created_at:
            type: string
          default_time:
            type: string
            description: The default duration of the service in minutes
          price:
            type: string
            description: Used for Packages that adjust an account's Service Balance.
          color:
            type: string
          trainer_id:
            type: string
          uses_calendar:
            type: string
          public:
            type: boolean
            description: If true, the service is available for booking by the public
          max_visits:
            type: integer
            description: Max visits before service shows as not bookable
          sub_trainer_id:
            type: string
          close_signup_hours_before:
            type: integer
            description: The number of hours before the service starts that booking
              is closed. Value can be negative to model closing after service
          require_prepayment:
            type: boolean
            description: if true, require payment before booking
          default_commission:
            type: integer
            description: All primary Staff that have no commission specified for this
              service will receive this commission.
          no_card_required:
            type: boolean
          default_commission_type:
            type: string
            enum:
            - per
            - amt
          default_trainer_id:
            type: string
          max_visits_per_day:
            type: integer
          tag_list:
            type: array
            items:
              type: string
          show_booked:
            type: boolean
          book_without_account:
            type: boolean
          free_classes:
            type: integer
            description: number of free classes someone can book if require_prepayment
              is set to true
          thumbnail_id:
            type: integer
            description: The id of the thumbnail image object created through assets
              api
          waitlist:
            type: boolean
            description: If true, the service has a waitlist
          media:
            type: string
            enum:
            - both
            - email
            - text
            description: The media type used to alert waitlist entries of available
              visits
          zoom:
            "$ref": "#/components/schemas/zoom"
          free_signups:
            type: boolean
          assessment_id:
            type: string
          assessment_sequence_id:
            type: string
          cancellation_fee:
            type: string
            description: A cancellation fee that can be charged for late cancellations.
          auto_charge_cancellation:
            type: boolean
          minimum_visits:
            type: integer
          classpass:
            type: boolean
          classpass_max_visits:
            type: integer
          noshow_fee:
            type: integer
            description: A fee that can be charged for no-show visits.
          free_class_package:
            type: boolean
            description: Free classes only apply to accounts that don't have any packages
              yet
          book_recurring_session:
            type: boolean
          default_package_id:
            type: integer
            description: Used for bulk-charging visits. When a visit is bulk-charged,
              it attempts the charge the user this package and deduct the package
              using that visit.
          disable_cancellations:
            type: boolean
          new_accounts_only:
            type: boolean
          prevent_visit_without_package:
            type: boolean
            description: If true, trainer can not book without selecting a package.
              Does not affect head trainer
          default_secondary_commission_type:
            type: string
            enum:
            - per
            - amt
          default_secondary_commission:
            type: integer
            description: All secondary Staff that have no commission specified for
              this service will receive this commission.
          waitlist_type:
            type: string
            description: 'First Come First Serve: When someone cancels, all waitlist
              entries are notified and the first one to book the session is able to
              join.<br>Auto-Add Oldest Waitlist Entry: When someone cancels, oldest
              waitlist entry is automatically added to the session and they are notified
              with instructions on how to cancel.'
            enum:
            - first_come_first_serve
            - auto_add
          waitlist_cap:
            type: integer
            description: The maximum number of people that can be on the waitlist
          service_code:
            type: string
          cancellation_policy_hours:
            type: integer
            description: number of hours a session must be cancelled by before being
              treated as a late cancellation
          default_trainer_ids:
            type: array
            items:
              type: string
          primary_trainer_ids:
            type: array
            items:
              type: string
          secondary_trainer_ids:
            type: array
            items:
              type: string
          location_limits:
            type: array
            items:
              type: object
              properties:
                location_id:
                  type: integer
                max_visits:
                  type: integer
                classpass_max_visits:
                  type: integer
    fbm_schedule:
      name: schedule
      in: body
      schema:
        type: object
        properties:
          name:
            type: string
          start_time:
            type: string
          end_time:
            type: string
          start_date:
            type: string
          end_date:
            type: string
          created_at:
            type: string
          trainer_id:
            type: string
          color:
            type: string
            description: Hex color code
          schedule_type:
            type: string
          sub_trainer_id:
            type: string
          buffer_in_minutes:
            type: string
          buffer_before_in_minutes:
            type: string
          interval_in_minutes:
            type: string
          block_available:
            type: string
          location_id:
            type: string
          recurring_start_at:
            type: string
          recurring_type:
            type: string
          recurring_count:
            type: string
          recurring_day_numbers:
            "$ref": "#/components/parameters/recurring_day_numbers"
          service_ids:
            type: array
            items:
              type: integer
          days:
            type: array
            items:
              type: string
            description: Days of the week the schedule covers (e.g. ["monday", "tuesday"])
    recurring_type:
      type: string
      enum:
      - day
      - week
      - month
      - month_on_day
      - month_on_date
      description: '"week" uses "days". month_on_day uses "days" and "recurring_day_numbers",
        "month_on_date" uses "recurring_day_numbers"'
    recurring_day_numbers:
      type: array
      items:
        type: integer
      description: only used for recurring_type is month_on_day or month_on_date.
        For recurring_type = "month_on_day", value is 1-4 and represent the week of
        the month. For recurring_type = "month_on_date", value is calendar date of
        the month (i.e. 25th)
    fbm_scheduled_appointment:
      name: scheduled_appointment
      in: body
      schema:
        type: object
        properties:
          start_time:
            type: string
          end_time:
            type: string
          start_at:
            type: string
          end_at:
            type: string
          description:
            type: string
          status:
            type: string
          recurring_type:
            "$ref": "#/components/parameters/recurring_type"
          recurring_count:
            type: integer
          recurring_start_at:
            type: string
          service_id:
            type: integer
          location_id:
            type: integer
          platform_id:
            type: integer
          disable_email:
            type: boolean
          notes:
            type: string
          original_scheduled_id:
            type: integer
          zoom:
            "$ref": "#/components/schemas/zoom"
          zoom_meeting:
            "$ref": "#/components/schemas/zoom_meeting"
          book_recurring:
            type: boolean
          max_visit_days:
            type: object
          trainer_ids:
            type: array
            items:
              type: integer
          recurring_day_numbers:
            "$ref": "#/components/parameters/recurring_day_numbers"
          secondary_trainer_ids:
            type: array
            items:
              type: integer
          primary_trainer_ids:
            type: array
            items:
              type: integer
          days:
            type: array
            items:
              type: integer
    fbm_scheduled_appointment_member:
      name: scheduled_appointment_member
      in: body
      schema:
        type: object
        properties:
          id:
            type: integer
          user_id:
            type: integer
          scheduled_appointment_id:
            type: integer
          created_at:
            type: string
          start_at:
            type: string
          end_at:
            type: string
          recurring_start_at:
            type: string
          recurring_type:
            "$ref": "#/components/parameters/recurring_type"
          recurring_count:
            type: integer
          recurring_day_numbers:
            "$ref": "#/components/parameters/recurring_day_numbers"
          days:
            type: array
            items:
              type: integer
    fbm_location:
      name: location
      in: body
      schema:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          address:
            type: string
          created_at:
            type: string
          trainer_id:
            type: integer
          time_zone:
            type: string
          sub_trainer_id:
            type: integer
          public:
            type: boolean
          classpass:
            type: boolean
          street_address:
            type: string
          city:
            type: string
          state:
            type: string
          zip_code:
            type: string
          country:
            type: string
          enable_kisi:
            type: boolean
          location_code:
            type: string
          service_ids:
            type: array
            items:
              type: integer
    fbm_appointment:
      name: appointment
      in: body
      schema:
        type: object
        properties:
          description:
            type: string
          service_id:
            type: integer
          location_id:
            type: integer
          start_time:
            type: string
          end_time:
            type: string
          client_id:
            type: integer
          notes:
            type: string
          color:
            type: string
          status:
            type: string
          cancelled_at:
            type: string
          scheduled_appointment_id:
            type: integer
          reschedule_date:
            type: string
          expires_on:
            type: string
          schedule_id:
            type: integer
          zoom:
            "$ref": "#/components/schemas/zoom"
          zoom_meeting:
            "$ref": "#/components/schemas/zoom_meeting"
          trainer_ids:
            type: array
            items:
              type: integer
          primary_trainer_ids:
            type: array
            items:
              type: integer
          secondary_trainer_ids:
            type: array
            items:
              type: integer
  securitySchemes:
    api_key:
      type: apiKey
      name: API-TOKEN
      in: header
    bearer:
      type: http
      scheme: bearer
  schemas:
    fbm_waitlist_entry:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        status:
          type: string
        appointment_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        client_id:
          type: integer
    v5_fbm_visit:
      type: object
      properties:
        appointment:
          "$ref": "#/components/schemas/fbm_appointment"
        id:
          type: integer
        user_id:
          type: integer
        status:
          type: string
        appointment_id:
          type: integer
        registered_at:
          type: string
        completed_at:
          type: string
        noshow_at:
          type: string
        cancelled_at:
          type: string
        created_at:
          type: string
        paid:
          type: boolean
        paid_by_package_id:
          type: integer
        user_name:
          type: string
        user_card_on_file:
          type: boolean
        color:
          type: string
        workout_id:
          type: integer
        cp_id:
          type: integer
        workout_date:
          type: string
        time_zone:
          type: string
        check_in:
          type: boolean
        check_out:
          type: boolean
        check_in_at:
          type: string
        check_out_at:
          type: string
        location_id:
          type: integer
        client_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        has_membership:
          type: boolean
        head_trainer_id:
          type: integer
        booked_by_id:
          type: integer
        booked_by_name:
          type: string
        cancelled_by_id:
          type: integer
        cancelled_by_name:
          type: string
        chaperone_visit_id:
          type: integer
        chaperone_user_id:
          type: integer
        service_price:
          type: number
        no_require_prepayment:
          type: boolean
        waitlist_entry_id:
          type: integer
        private_notes:
          type: string
    v4_fbm_visit:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        status:
          type: string
        appointment_id:
          type: integer
        registered_at:
          type: string
        completed_at:
          type: string
        noshow_at:
          type: string
        cancelled_at:
          type: string
        created_at:
          type: string
        paid:
          type: boolean
        paid_by_package_id:
          type: integer
        user_name:
          type: string
        user_card_on_file:
          type: boolean
        color:
          type: string
        workout_id:
          type: integer
        cp_id:
          type: integer
        workout_date:
          type: string
        time_zone:
          type: string
        check_in:
          type: boolean
        check_out:
          type: boolean
        check_in_at:
          type: string
        check_out_at:
          type: string
        location_id:
          type: integer
        client_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        has_membership:
          type: boolean
        head_trainer_id:
          type: integer
        booked_by_id:
          type: integer
        booked_by_name:
          type: string
        cancelled_by_id:
          type: integer
        cancelled_by_name:
          type: string
        chaperone_visit_id:
          type: integer
        chaperone_user_id:
          type: integer
        service_price:
          type: number
        no_require_prepayment:
          type: boolean
        waitlist_entry_id:
          type: integer
        private_notes:
          type: string
    zoom:
      type: object
      properties:
        password:
          type: string
        description:
          type: string
        auto_recording:
          type: string
        join_before_host:
          type: string
        mute_upon_entry:
          type: string
        waiting_room:
          type: string
    zoom_meeting:
      type: object
      properties:
        id:
          type: string
        zoom_url:
          type: string
        type:
          type: string
        agenda:
          type: string
        status:
          type: string
        host_id:
          type: string
        join_url:
          type: string
        password:
          type: string
        timezone:
          type: string
        start_url:
          type: string
    fbm_schedule:
      type: object
      properties:
        id:
          type: integer
        days:
          type: array
          items:
            type: integer
        start_time:
          type: string
        end_time:
          type: string
        start_date:
          type: string
        end_date:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        trainer_id:
          type: integer
        color:
          type: string
        schedule_type:
          type: string
        service_ids:
          type: array
          items:
            type: integer
        sub_trainer_id:
          type: integer
        buffer_in_minutes:
          type: integer
        buffer_before_in_minutes:
          type: integer
        interval_in_minutes:
          type: integer
        block_available:
          type: boolean
        location_id:
          type: integer
        name:
          type: string
        recurring_start_at:
          type: string
        recurring_type:
          "$ref": "#/components/parameters/recurring_type"
        recurring_count:
          type: integer
        recurring_day_numbers:
          "$ref": "#/components/parameters/recurring_day_numbers"
    fbm_scheduled_appointment:
      type: object
      properties:
        id:
          type: integer
        start_time:
          type: integer
        end_time:
          type: integer
        start_at:
          type: string
        end_at:
          type: string
        description:
          type: string
        status:
          type: string
        days:
          type: array
          items:
            type: integer
        recurring_type:
          "$ref": "#/components/parameters/recurring_type"
        recurring_count:
          type: integer
        service_id:
          type: integer
        location_id:
          type: integer
        platform_id:
          type: integer
        trainer_ids:
          type: array
          items:
            type: integer
        notes:
          type: string
        links:
          type: object
          properties:
            members:
              type: string
        service_name:
          type: string
        zoom:
          "$ref": "#/components/schemas/zoom"
        zoom_meeting:
          "$ref": "#/components/schemas/zoom_meeting"
        book_recurring:
          type: boolean
        max_visit_days:
          type: integer
        primary_trainer_ids:
          type: array
          items:
            type: integer
        secondary_trainer_ids:
          type: array
          items:
            type: integer
        trainer_names:
          type: array
          items:
            type: string
        recurring_start_at:
          type: string
        recurring_day_numbers:
          "$ref": "#/components/parameters/recurring_day_numbers"
        created_at:
          type: integer
        updated_at:
          type: integer
    fbm_appointment:
      type: object
      properties:
        id:
          type: integer
        start_time:
          type: string
        end_time:
          type: string
        notes:
          type: string
        color:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        service_id:
          type: integer
        client_id:
          type: integer
        location_id:
          type: integer
        location_name:
          type: string
        links:
          type: object
          properties:
            visits:
              type: string
            scheduledAppointmentMembers:
              type: string
            entries:
              type: string
        status:
          type: string
        plan_workout_ids:
          type: array
          items:
            type: integer
        description:
          type: string
        scheduled_appointment_id:
          type: integer
        reschedule_date:
          type: string
        service_name:
          type: string
        is_group_class:
          type: boolean
        expires_on:
          type: string
        schedule_id:
          type: integer
        zoom:
          "$ref": "#/components/schemas/zoom"
        zoom_meeting:
          "$ref": "#/components/schemas/zoom_meeting"
        calendar_id:
          type: integer
        platform_id:
          type: integer
        cancellation_fee:
          type: string
        noshow_fee:
          type: string
        max_visits:
          type: integer
        disable_cancellations:
          type: boolean
        trainer_ids:
          type: array
          items:
            type: integer
        primary_trainer_ids:
          type: array
          items:
            type: integer
        primary_trainer_names:
          type: array
          items:
            type: string
        secondary_trainer_ids:
          type: array
          items:
            type: integer
        secondary_trainer_names:
          type: array
          items:
            type: string
        trainer_names:
          type: array
          items:
            type: string
        override_max_visits:
          type: integer
    fbm_location:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        address:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        trainer_id:
          type: integer
        time_zone:
          type: string
        stripe_connected:
          type: boolean
        service_ids:
          type: array
          items:
            type: integer
        payout_schedule:
          type: string
        public:
          type: boolean
        classpass:
          type: boolean
        street_address:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string
        enable_kisi:
          type: boolean
        location_code:
          type: string
    fbm_scheduled_appointment_member:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        scheduled_appointment_id:
          type: integer
        created_at:
          type: string
        user_card_on_file:
          type: boolean
        client_id:
          type: integer
        user_name:
          type: string
        days:
          type: array
          items:
            type: integer
        start_at:
          type: string
        end_at:
          type: string
        recurring_start_at:
          type: string
        recurring_type:
          "$ref": "#/components/parameters/recurring_type"
        recurring_count:
          type: integer
        recurring_day_numbers:
          "$ref": "#/components/parameters/recurring_day_numbers"
    fbm_package_raw:
      type: object
      properties:
        id:
          type: integer
        trainer_id:
          type: integer
        location_id:
          type: integer
        service_ids:
          type: array
          items:
            type: integer
        count:
          type: integer
        one_time_payment:
          type: string
        description:
          type: string
        meta:
          type: object
          properties:
            tax_rates:
              type: array
              items:
                type: string
            kisi_groups:
              type: array
              items:
                type: string
            location_prices:
              type: array
              items:
                type: string
            enable_auto_renew:
              type: boolean
        processor_plans:
          type: array
          items:
            type: string
        created_at:
          type: string
        updated_at:
          type: string
        expires_in_days:
          type: integer
        public:
          type: boolean
        name:
          type: string
        contract:
          type: string
        deleted_at:
          type: string
        sub_trainer_id:
          type: integer
        service_counts:
          type: array
          items:
            "$ref": "#/components/schemas/service_count"
        data_load_model:
          type: string
        platform_id:
          type: integer
        assigned_trainer_id:
          type: integer
        stripe_product_id:
          type: string
        destination_id:
          type: string
        destination_type:
          type: string
        tag_list:
          type: array
          items:
            type: string
        tax_rates:
          type: array
          items:
            type: string
        kisi_groups:
          type: array
          items:
            type: string
        location_prices:
          type: array
          items:
            type: string
        enable_auto_renew:
          type: boolean
        stripe_plans:
          type: array
          items:
            "$ref": "#/components/schemas/stripe_plan"
    fbm_service:
      type: object
      properties:
        assessment_id:
          type: integer
        assessment_sequence_id:
          type: integer
        auto_charge_cancellation:
          type: boolean
        book_without_account:
          type: boolean
        calendar_id:
          type: integer
        cancellation_fee:
          type: string
        price:
          type: string
        close_signup_hours_before:
          type: integer
        color:
          type: string
        created_at:
          type: string
        default_commission_type:
          type: string
        default_commission:
          type: integer
        default_time:
          type: string
        default_trainer_ids:
          type: array
          items:
            type: integer
        description:
          type: string
        free_classes:
          type: integer
        free_signups:
          type: integer
        id:
          type: integer
        large_thumbnail:
          type: string
          description: URL to a large thumbnail image
        location_limits:
          type: array
          items:
            type: string
        max_visits_per_day:
          type: integer
        max_visits:
          type: integer
          description: Maximum number of visits allowed for this service
        media:
          type: string
        minimum_visits:
          type: integer
        name_with_brand:
          type: string
        name:
          type: string
        no_card_required:
          type: boolean
        public:
          type: boolean
        require_prepayment:
          type: boolean
        service_type:
          type: string
          enum:
          - group_class
          - appointment
        show_booked:
          type: boolean
        tags:
          type: array
          items:
            type: string
        thumbnail:
          type: string
        trainer_id:
          type: integer
        updated_at:
          type: string
        uses_calendar:
          type: boolean
        waitlist:
          type: boolean
        zoom:
          type: string
        classpass:
          type: boolean
        classpass_max_visits:
          type: integer
        noshow_fee:
          type: string
        free_class_package:
          type: boolean
        book_recurring_session:
          type: boolean
        default_package_id:
          type: integer
        disable_cancellations:
          type: boolean
        new_accounts_only:
          type: boolean
        primary_trainer_ids:
          type: array
          items:
            type: integer
        primary_trainer_name:
          type: array
          items:
            type: string
        secondary_trainer_ids:
          type: array
          items:
            type: integer
        secondary_trainer_name:
          type: array
          items:
            type: string
        default_secondary_commission_type:
          type: string
        default_secondary_commission:
          type: integer
        waitlist_type:
          type: string
        waitlist_cap:
          type: integer
        service_code:
          type: string
        cancellation_policy_hours:
          type: integer
    fbm_package:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        trainer_id:
          type: integer
        location_id:
          type: integer
        assigned_trainer_id:
          type: integer
        one_time_payment:
          type: string
        service_ids:
          type: array
          items:
            type: integer
        service_counts:
          type: array
          items:
            "$ref": "#/components/schemas/service_count"
        description:
          type: string
        expires_in_days:
          type: integer
        processor_plans:
          type: array
          items:
            type: string
        public:
          type: boolean
        location_prices:
          type: array
          items:
            type: string
        allow_activation_date:
          type: boolean
        contract:
          type: string
        book_all_visits:
          type: boolean
        max_visits:
          type: integer
        visits_interval:
          type: string
        visits_interval_count:
          type: integer
        image_url:
          type: string
        activates_in_days:
          type: integer
        thank_you_message:
          type: string
        thank_you_page:
          type: string
        book_outside_of_package:
          type: boolean
        book_outside_of_subscription_package:
          type: boolean
        limit_purchase:
          type: boolean
        tax_rates:
          type: array
          items:
            type: string
        limit_booking_days:
          type: integer
        required_assessment:
          type: boolean
        required_sequence:
          type: boolean
        tags:
          type: array
          items:
            type: string
        max_shares:
          type: integer
        enable_kisi:
          type: boolean
        max_users:
          type: integer
        do_not_convert_visits:
          type: boolean
        payment_options:
          type: array
          items:
            "$ref": "#/components/schemas/payment_option"
        links:
          type: object
          properties:
            upsells:
              type: string
        enable_service_balance:
          type: boolean
        collection_method:
          type: string
        days_until_due:
          type: integer
        location_payment_options:
          type: array
          items:
            "$ref": "#/components/schemas/payment_option"
        service_balance_amount:
          type: integer
        add_to_invoice:
          type: boolean
        visits_reset_billing_cycle:
          type: boolean
        auto_renew_cycles:
          type: integer
        enable_auto_renew:
          type: boolean
        send_invoice_email:
          type: boolean
        kisi_groups:
          type: array
          items:
            type: object
        use_new_checkout:
          type: boolean
        destination_id:
          type: integer
        destination_type:
          type: string
        share_with_all_user_dependents:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string
    payment_option:
      oneOf:
      - "$ref": "#/components/schemas/payment_option_as_purchase"
      - "$ref": "#/components/schemas/payment_option_as_subscription"
    payment_option_as_purchase:
      type: object
      properties:
        type:
          type: string
        amount:
          type: integer
        currency:
          type: string
        location:
          type: integer
    payment_option_as_subscription:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        name:
          type: string
        amount:
          type: integer
        currency:
          type: string
        interval:
          type: string
        interval_count:
          type: integer
        trial_period_days:
          type: integer
        is_iap:
          type: boolean
        location:
          type: integer
    service_count:
      type: object
      properties:
        count:
          type: integer
        max_guests:
          type: integer
        max_visits:
          type: integer
        service_ids:
          type: array
          items:
            type: integer
        max_rollover:
          type: integer
        num_payments:
          type: integer
        visits_interval:
          type: integer
        visits_interval_count:
          type: integer
    stripe_plan:
      type: object
      properties:
        id:
          type: string
        tiers:
          type: string
        active:
          type: boolean
        amount:
          type: integer
        object:
          type: string
        created:
          type: integer
        product:
          type: string
        currency:
          type: string
        interval:
          type: string
        livemode:
          type: boolean
        metadata:
          type: string
        nickname:
          type: string
        tiers_mode:
          type: string
        usage_type:
          type: string
        amount_decimal:
          type: string
        billing_scheme:
          type: string
        interval_count:
          type: integer
        aggregate_usage:
          type: string
        transform_usage:
          type: string
        trial_period_days:
          type: integer
