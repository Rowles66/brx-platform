name: Playwright E2E Tests

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testdb
        options: >
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install 1Password CLI
      uses: 1password/install-cli-action@v1
      
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Setup database
      run: |
        npm run db:generate
        npm run db:push
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        
    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        
    - name: Run Playwright tests with 1Password
      run: op run -- npm run test:e2e
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        BASE_URL: http://localhost:3000
        CI: true
        
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.node-version }}
        path: playwright-report/
        retention-days: 30
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: test-results/
        retention-days: 30

  # Job to run tests in different browsers
  cross-browser-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testdb
        options: >
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install 1Password CLI
      uses: 1password/install-cli-action@v1
      
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
      
    - name: Setup database
      run: |
        npm run db:generate
        npm run db:push
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        
    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        
    - name: Run Playwright tests on ${{ matrix.browser }}
      run: op run -- npx playwright test --project=${{ matrix.browser }}
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        BASE_URL: http://localhost:3000
        CI: true
        
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30

